#' @param N Total number of access lanes (excluding dedicated left-turn lanes).
#' @keywords traffic going straight left turn public lane signalized intersection
#' @seealso \code{\link{lane_group_si}}
#' @export V_LF_si
#' @examples
#' V_LF_si(case = 'case4', V_L = 423, V_TH = 923, C = 76, N = 4)
V_LF_si <- function(case = NULL, V_L = NULL, V_TH = NULL, C = NULL, N = NULL){
if (V_L >= 0 & V_TH >= 0){
if (C > 0){
if (N >= 1){
if (case == 'case4' | case == 'case6'){vlf <- 3600 * V_TH / (C * N * V_L)}
else if (case == 'case5'){vlf <- 7200 * V_TH / (C * (N - 1) * V_L)
}
else {vlf <- 'Error : [case] must be one of [case4], [case5], [case6]. Please check that.'}
}
else {vlf <- 'Error : [N] must be positive integer. Please check that.'}
}
else {vlf <- 'Error : [C] must be positive(sec). Please check that.'}
}
else {vlf <- 'Error : [V_L], [V_TH] must be positive(vph). Please check that.'}
}
#' @param case Case of signalized intersection. Choose one from: \code{'case4'}, \code{'case5'}, \code{'case6'}. See \code{\link{case_si}}
#' @param V_L Left Turn Traffic Volume(vph)
#' @param V_TH Straight-through traffic (vph)
#' @param C Signal cycle(seconds)
#' @param N Total number of access lanes (excluding dedicated left-turn lanes).
#' @keywords traffic going straight left turn public lane signalized intersection
#' @seealso \code{\link{lane_group_si}}
#' @export V_LF_si
#' @examples
#' V_LF_si(case = 'case4', V_L = 423, V_TH = 923, C = 76, N = 4)
V_LF_si <- function(case = NULL, V_L = NULL, V_TH = NULL, C = NULL, N = NULL){
if (V_L >= 0 & V_TH >= 0){
if (C > 0){
if (N >= 1){
if (case == 'case4' | case == 'case6'){vlf <- 3600 * V_TH / (C * N * V_L)}
else if (case == 'case5'){vlf <- 7200 * V_TH / (C * (N - 1) * V_L)
}
else {vlf <- 'Error : [case] must be one of [case4], [case5], [case6]. Please check that.'}
}
else {vlf <- 'Error : [N] must be positive integer. Please check that.'}
}
else {vlf <- 'Error : [C] must be positive(sec). Please check that.'}
}
else {vlf <- 'Error : [V_L], [V_TH] must be positive(vph). Please check that.'}
vlf
}
V_LF_si(case = 'case5', V_L = 304, V_TH = 999, C = 194, N = 3)
#'     This function follows <Formula 8-15>, <Formula 8-16> in KHCM(2013), p.239.
#' @param case Case of signalized intersection. Choose one from: \code{'case1'}, \code{'case2'}, \code{'case3'}, \code{'case4'}, \code{'case5'}, \code{'case6'}. See \code{\link{case_si}}
#' @param V_R Right Turn Traffic Volume(vph)
#' @param V_TH Straight-through traffic (vph)
#' @param C Signal cycle(seconds)
#' @param N Total number of access lanes (excluding dedicated left-turn lanes)
#' @keywords traffic going straight right turn public lane signalized intersection
#' @export V_RF_si
#' @examples
#'V_RF_si(432, 1293, 82, 4)
V_RF_si <- function(V_R = NULL, V_TH = NULL, C = NULL, N = NULL){
if (V_L >= 0 & V_TH >= 0){
if (C > 0){
if (N >= 1){
if (case == 'case1' | case == 'case2' | case == 'case3' | case == 'case4' | case == 'case6'){vrf <- 3600 * V_TH / (C * N * V_R)}
else if (case == 'case5'){vrf <- 7200 * V_TH / (C * (N - 1) * V_R)
}
else {vrf <- 'Error : [case] must be one of [case4], [case5], [case6]. Please check that.'}
}
else {vrf <- 'Error : [N] must be positive integer. Please check that.'}
}
else {vrf <- 'Error : [C] must be positive(sec). Please check that.'}
}
else {vrf <- 'Error : [V_L], [V_TH] must be positive(vph). Please check that.'}
vrf
}
#'     This function follows <Formula 8-15>, <Formula 8-16> in KHCM(2013), p.239.
#' @param case Case of signalized intersection. Choose one from: \code{'case1'}, \code{'case2'}, \code{'case3'}, \code{'case4'}, \code{'case5'}, \code{'case6'}. See \code{\link{case_si}}
#' @param V_R Right Turn Traffic Volume(vph)
#' @param V_TH Straight-through traffic (vph)
#' @param C Signal cycle(seconds)
#' @param N Total number of access lanes (excluding dedicated left-turn lanes)
#' @keywords traffic going straight right turn public lane signalized intersection
#' @export V_RF_si
#' @examples
#'
V_RF_si <- function(case = NULL, V_R = NULL, V_TH = NULL, C = NULL, N = NULL){
if (V_L >= 0 & V_TH >= 0){
if (C > 0){
if (N >= 1){
if (case == 'case1' | case == 'case2' | case == 'case3' | case == 'case4' | case == 'case6'){vrf <- 3600 * V_TH / (C * N * V_R)}
else if (case == 'case5'){vrf <- 7200 * V_TH / (C * (N - 1) * V_R)
}
else {vrf <- 'Error : [case] must be one of [case4], [case5], [case6]. Please check that.'}
}
else {vrf <- 'Error : [N] must be positive integer. Please check that.'}
}
else {vrf <- 'Error : [C] must be positive(sec). Please check that.'}
}
else {vrf <- 'Error : [V_L], [V_TH] must be positive(vph). Please check that.'}
vrf
}
V_RF_si(case = 'case3', V_R = 432, V_TH = 1293, C = 182, N = 4)
#'     This function follows <Formula 8-15>, <Formula 8-16> in KHCM(2013), p.239.
#' @param case Case of signalized intersection. Choose one from: \code{'case1'}, \code{'case2'}, \code{'case3'}, \code{'case4'}, \code{'case5'}, \code{'case6'}. See \code{\link{case_si}}
#' @param V_R Right Turn Traffic Volume(vph)
#' @param V_TH Straight-through traffic (vph)
#' @param C Signal cycle(seconds)
#' @param N Total number of access lanes (excluding dedicated left-turn lanes)
#' @keywords traffic going straight right turn public lane signalized intersection
#' @export V_RF_si
#' @examples
#'
V_RF_si <- function(case = NULL, V_R = NULL, V_TH = NULL, C = NULL, N = NULL){
if (V_R >= 0 & V_TH >= 0){
if (C > 0){
if (N >= 1){
if (case == 'case1' | case == 'case2' | case == 'case3' | case == 'case4' | case == 'case6'){vrf <- 3600 * V_TH / (C * N * V_R)}
else if (case == 'case5'){vrf <- 7200 * V_TH / (C * (N - 1) * V_R)
}
else {vrf <- 'Error : [case] must be one of [case4], [case5], [case6]. Please check that.'}
}
else {vrf <- 'Error : [N] must be positive integer. Please check that.'}
}
else {vrf <- 'Error : [C] must be positive(sec). Please check that.'}
}
else {vrf <- 'Error : [V_L], [V_TH] must be positive(vph). Please check that.'}
vrf
}
V_RF_si(case = 'case3', V_R = 432, V_TH = 1293, C = 182, N = 4)
#' @param V_L Left Turn Traffic Volume(vph)
#' @param V_TH Straight-through traffic (vph)
#' @param E_R Forward conversion factor for right turn. See \code{\link{E_R_si}}
#' @param E_L Forward conversion factor for left turn. See \code{\link{E_L_si}}
#' @param N Total number of access lanes (excluding dedicated left-turn lanes).
#' @keywords straight-through traffic volume public left-turn signalized intersection
#' @seealso \code{\link{E_R_si}}, \code{\link{E_L_si}}, \code{\link{E_R_si}}, \code{\link{lane_group_si}}
#' @export V_STL_si
#' @examples
#' V_STL_si(case = 'case6', V_R = 323, V_L = 291, V_TH = 999, E_R = 1.2, E_L = 1.09, N = 4)
V_STL_si <- function(case = NULL, V_R = NULL, V_L = NULL, V_TH = NULL, E_R = NULL, E_L = NULL, N = NULL){
if (V_R >= 0 & V_L >= 0 & V_TH >= 0){
if (E_R > 0 & E_L > 0){
if (N >= 2){
if (case == 'case4' | case == 'case6'){vstl <- (1/N) * (V_TH + E_R * V_R - E_L * V_L * (N - 1))}
else if (case == 'case5'){vstl <- (1/N) * (2 * (V_TH + E_R * V_R) - E_L * V_L * (N - 2))}
else {vstl <- 'Error : [case] must be one of [case4], [case5], [case6]. Please check that.'}
}
else {vstl <- 'Error : [N] must be >= 2 and integer. Please check that.'}
}
else {vstl <- 'Error : [E_R], [E_L] must be positive. Please check that.'}
}
else {vstl <- 'Error : [V_R], [V_L], [V_TH] must be >= 0(vph). Please check that.'}
vstl
}
V_STL_si(case = 'case6', V_R = 323, V_L = 291, V_TH = 999, E_R = 1.2, E_L = 1.09, N = 4)
#' @param V_L Left Turn Traffic Volume(vph)
#' @param V_TH Straight-through traffic (vph)
#' @param E_R Forward conversion factor for right turn
#' @param E_L Forward conversion factor for left turn
#' @param N Total number of access lanes (excluding dedicated left-turn lanes).
#' @keywords straight-through traffic volume public left-turn signalized intersection
#' @seealso \code{\link{E_R_si}}, \code{\link{E_L_si}}, \code{\link{lane_group_si}}
#' @export V_STR_si
#' @examples
#' V_STR_si(92, 103, 763, 1.3, 2.123, 5)
V_STR_si <- function(V_R = NULL, V_L = NULL, V_TH = NULL, E_R = NULL, E_L = NULL, N = NULL){
if (V_R >= 0 & V_L >= 0 & V_TH >= 0){
if (E_R > 0 & E_L > 0){
if (N >= 2){
if (case == 'case4' | case == 'case6'){vstr <- (1/N) * (V_TH + E_R * V_R * (N - 1))}
else if (case == 'case5'){vstr <- (1/N) * (V_TH + E_L * V_L - E_R * V_R * (N - 1))}
else {vstr <- 'Error : [case] must be one of [case4], [case5], [case6]. Please check that.'}
}
else {vstr <- 'Error : [N] must be >= 2 and integer. Please check that.'}
}
else {vstr <- 'Error : [E_R], [E_L] must be positive. Please check that.'}
}
else {vstr <- 'Error : [V_R], [V_L], [V_TH] must be >= 0(vph). Please check that.'}
vstr
}
#' @param V_L Left Turn Traffic Volume(vph)
#' @param V_TH Straight-through traffic (vph)
#' @param E_R Forward conversion factor for right turn
#' @param E_L Forward conversion factor for left turn
#' @param N Total number of access lanes (excluding dedicated left-turn lanes).
#' @keywords straight-through traffic volume public left-turn signalized intersection
#' @seealso \code{\link{E_R_si}}, \code{\link{E_L_si}}, \code{\link{lane_group_si}}
#' @export V_STR_si
#' @examples
#' V_STR_si(92, 103, 763, 1.3, 2.123, 5)
V_STR_si <- function(case = NULL, V_R = NULL, V_L = NULL, V_TH = NULL, E_R = NULL, E_L = NULL, N = NULL){
if (V_R >= 0 & V_L >= 0 & V_TH >= 0){
if (E_R > 0 & E_L > 0){
if (N >= 2){
if (case == 'case4' | case == 'case6'){vstr <- (1/N) * (V_TH + E_R * V_R * (N - 1))}
else if (case == 'case5'){vstr <- (1/N) * (V_TH + E_L * V_L - E_R * V_R * (N - 1))}
else {vstr <- 'Error : [case] must be one of [case4], [case5], [case6]. Please check that.'}
}
else {vstr <- 'Error : [N] must be >= 2 and integer. Please check that.'}
}
else {vstr <- 'Error : [E_R], [E_L] must be positive. Please check that.'}
}
else {vstr <- 'Error : [V_R], [V_L], [V_TH] must be >= 0(vph). Please check that.'}
vstr
}
V_STR_si(case = 'case3', V_R = 92, V_L = 103, V_TH = 763, E_R = 1.3, E_L = 2.123, N = 5)
#' @param V_L Left Turn Traffic Volume(vph)
#' @param V_TH Straight-through traffic (vph)
#' @param E_R Forward conversion factor for right turn
#' @param E_L Forward conversion factor for left turn
#' @param N Total number of access lanes (excluding dedicated left-turn lanes).
#' @keywords straight-through traffic volume public left-turn signalized intersection
#' @seealso \code{\link{E_R_si}}, \code{\link{E_L_si}}, \code{\link{lane_group_si}}
#' @export V_STR_si
#' @examples
#' V_STR_si(92, 103, 763, 1.3, 2.123, 5)
V_STR_si <- function(case = NULL, V_R = NULL, V_L = NULL, V_TH = NULL, E_R = NULL, E_L = NULL, N = NULL){
if (V_R >= 0 & V_L >= 0 & V_TH >= 0){
if (E_R > 0 & E_L > 0){
if (N >= 2){
if (case == 'case1' | case == 'case2' | case == 'case3'){vstr <- (1/N) * (V_TH + E_R * V_R * (N - 1))}
else if (case == 'case4' | case == 'case5' | case == 'case6'){vstr <- (1/N) * (V_TH + E_L * V_L - E_R * V_R * (N - 1))}
else {vstr <- 'Error : [case] must be one of [case4], [case5], [case6]. Please check that.'}
}
else {vstr <- 'Error : [N] must be >= 2 and integer. Please check that.'}
}
else {vstr <- 'Error : [E_R], [E_L] must be positive. Please check that.'}
}
else {vstr <- 'Error : [V_R], [V_L], [V_TH] must be >= 0(vph). Please check that.'}
vstr
}
V_STR_si(case = 'case4', V_R = 92, V_L = 103, V_TH = 763, E_R = 1.3, E_L = 2.123, N = 5)
#' Turning traffic volume ratio of the practically dedicated left-turn lane group i at signalized intersection.
#'     The ratio of left turns in the group of practically dedicated left-turn lanes.
#'     This function follows <Formula 8-21> in KHCM(2013), p.242.
#' @param V_L Left Turn Traffic Volume(vph)
#' @param V_LF Traffic Going Straight Ahead of the First Left Turn on the Public Left Turn Lane at Signalized Intersection. See \code{\link{V_LF_si}}
#' @keywords Turning traffic volume ratio practical dedicated left-turn lane signalized intersection
#' @seealso \code{\link{V_LF_si}}
#' @export P_L_pd_si
#' @examples
#' P_L_pd_si(320, 832)
P_L_pd_si <- function(V_L = NULL, V_LF = NULL){
if (V_L >= 0 & V_LF >= 0 & ((V_L + V_LF) > 0)){p <- V_L / (V_LF + V_L)
else {p <- 'Error : [V_L], [V_LF] must be positive(vph). Please check that.'}
}
p
}
if (V_L >= 0 & V_LF >= 0 & ((V_L + V_LF) > 0)){p <- V_L / (V_LF + V_L)
else {p <- 'Error : [V_L], [V_LF] must be positive(vph). Please check that.'}
p
}
#' Turning traffic volume ratio of the practically dedicated left-turn lane group i at signalized intersection.
#'     The ratio of left turns in the group of practically dedicated left-turn lanes.
#'     This function follows <Formula 8-21> in KHCM(2013), p.242.
#' @param V_L Left Turn Traffic Volume(vph)
#' @param V_LF Traffic Going Straight Ahead of the First Left Turn on the Public Left Turn Lane at Signalized Intersection. See \code{\link{V_LF_si}}
#' @keywords Turning traffic volume ratio practical dedicated left-turn lane signalized intersection
#' @seealso \code{\link{V_LF_si}}
#' @export P_L_pd_si
#' @examples
#' P_L_pd_si(320, 832)
P_L_pd_si <- function(V_L = NULL, V_LF = NULL){
if (V_L >= 0 & V_LF >= 0 & ((V_L + V_LF) > 0)){p <- V_L / (V_LF + V_L)}
else {p <- 'Error : [V_L], [V_LF] must be positive(vph). Please check that.'}
p
}
P_L_pd_si(V_L = 320, V_LF = 300)
#' Turning traffic volume ratio of the practically dedicated right turn lane group i at signalized intersection.
#'    The ratio of right turns in the actual dedicated right turn lane group
#'    This function follows <Formula 8-22> in KHCM(2013), p.242.
#' @param V_R Corrected right turn traffic volume (vph) for RTOR. See \code{\link{V_R_si}}
#' @param V_RF Traffic going straight ahead of the first right turn on the public right turn lane at the signal intersection(vph). See \code{\link{V_RF_si}}
#' @keywords turning traffic volume ratio practically dedicated right turn lane group signalized intersection
#' @seealso \code{\link{V_RF_si}}, \code{\link{V_R_si}}
#' @export P_R_pd_si
#' @examples
#' P_R_pd_si(V_R = 321, V_RF = 1289)
P_R_pd_si <- function(V_R = NULL, V_RF = NULL){
if (V_R >= 0 & V_RF >= 0 & ((V_R + V_RF) > 0)){
p <- V_R / (V_RF + V_R)
}
else {p <- 'Error : [V_R], [V_RF] must be positive(vph). Please check that.'}
p
}
P_R_pd_si(V_R = 321, V_RF = 283)
#' Turn traffic ratio for shared left-turn lane group i.
#'     Ratio of left turns in the straight-left turn public lane group.
#'     This function follows <Formula 8-23> in KHCM(2013), p.242.
#' @param V_L Left Turn Traffic Volume(vph)
#' @param V_TH Straight-through traffic (vph)
#' @param V_RF Traffic going straight ahead of the first right turn on the shared right turn lane at the signal intersection(vph). See \code{\link{V_RF_si}}
#' @keywords Turning traffic volume ratio shared left-turning lane group signalized intersection
#' @seealso \code{\link{V_LF_si}}
#' @export P_LT_sh_si
#' @examples
P_LT_sh_si <- function(V_L = NULL, V_TH = NULL, V_RF = NULL){
if (V_L >= 0 & V_TH > 0 & V_RF > 0 & (V_TH - V_LF + V_R) > 0){
p <- V_L / (V_TH - V_RF + V_L)
}
else {p <- 'Error : [V_L], [V_TH], [V_RF] must be positive(vph). And (V_TH - V_LF + V_R) > 0. Please check that.'}
p
}
P_LT_sh_si(V_L = 300, V_TH = 1000, V_RF = 283)
#' Turn traffic ratio for shared left-turn lane group i.
#'     Ratio of left turns in the straight-left turn public lane group.
#'     This function follows <Formula 8-23> in KHCM(2013), p.242.
#' @param V_L Left Turn Traffic Volume(vph)
#' @param V_TH Straight-through traffic (vph)
#' @param V_RF Traffic going straight ahead of the first right turn on the shared right turn lane at the signal intersection(vph). See \code{\link{V_RF_si}}
#' @keywords Turning traffic volume ratio shared left-turning lane group signalized intersection
#' @seealso \code{\link{V_LF_si}}
#' @export P_LT_sh_si
#' @examples
P_LT_sh_si <- function(V_L = NULL, V_TH = NULL, V_RF = NULL){
if (V_L >= 0 & V_TH > 0 & V_RF > 0 & (V_TH - V_RF + V_R) > 0){
p <- V_L / (V_TH - V_RF + V_L)
}
else {p <- 'Error : [V_L], [V_TH], [V_RF] must be positive(vph). And (V_TH - V_LF + V_R) > 0. Please check that.'}
p
}
P_LT_sh_si(V_L = 300, V_TH = 1000, V_RF = 283)
#' Turn traffic ratio for shared left-turn lane group i.
#'     Ratio of left turns in the straight-left turn public lane group.
#'     This function follows <Formula 8-23> in KHCM(2013), p.242.
#' @param V_L Left Turn Traffic Volume(vph)
#' @param V_TH Straight-through traffic (vph)
#' @param V_RF Traffic going straight ahead of the first right turn on the shared right turn lane at the signal intersection(vph). See \code{\link{V_RF_si}}
#' @keywords Turning traffic volume ratio shared left-turning lane group signalized intersection
#' @seealso \code{\link{V_LF_si}}
#' @export P_LT_sh_si
#' @examples
P_LT_sh_si <- function(V_L = NULL, V_TH = NULL, V_RF = NULL){
if (V_L >= 0 & V_TH > 0 & V_RF > 0 & (V_TH - V_RF + V_L) > 0){
p <- V_L / (V_TH - V_RF + V_L)
}
else {p <- 'Error : [V_L], [V_TH], [V_RF] must be positive(vph). And (V_TH - V_LF + V_R) > 0. Please check that.'}
p
}
P_LT_sh_si(V_L = 300, V_TH = 1000, V_RF = 283)
#'     Ratio of right turns in the straight-right turn shared lane group.
#'     This function follows <Formula 8-24> in KHCM(2013), p.242.
#' @param V_R Right Turn Traffic Volume(vph)
#' @param V_TH Straight-through traffic (vph)
#' @param V_LF Traffic going straight ahead of the first left turn on the shared left turn lane at the signal intersection(vph). See \code{\link{V_RF_si}}
#' @keywords Turning traffic volume ratio shared right-turning lane group signalized intersection
#' @seealso \code{\link{V_RF_si}}
#' @export P_RT_sh_si
#' @examples
#' P_RT_sh_si(V_R = 300, V_TH = 1000, V_LF = 283)
P_RT_sh_si <- function(V_R = NULL, V_TH = NULL, V_LF = NULL){
if (V_R >= 0 & V_TH > 0 & V_LF > 0 & (V_TH - V_LF + V_R) > 0){
p <- V_R / (V_TH - V_LF + V_R)
}
else {p <- 'Error : [V_R], [V_TH], [V_LF] must be positive(vph). And (V_TH - V_LF + V_R) > 0. Please check that.'}
p
}
P_RT_sh_si(V_R = 300, V_TH = 1000, V_LF = 283)
#' The total traffic volume (vph) of the approach road in the integrated lane group
#'     for going straight, left and right turns at signalized intersection.
#'     It follows <Formula 8-25> in KHCM(2013), p.242.
#' @param V_R Right Turn Traffic Volume(vph). See \code{\link{V_R_si}}
#' @param V_L Left Turn Traffic Volume(vph)
#' @param V_TH Straight-through traffic (vph)
#' @seealso \code{\link{V_R_si}}, \code{\link{P_LT_int_si}}, \code{\link{P_RT_int_si}}
#' @keywords traffic volume land use signalized intersection
#' @export V_T_int_si
#' @examples
V_T_int_si <- function(V_R = NULL, V_L = NULL, V_TH = NULL){
if (V_R >= 0 & V_TH >= 0 & V_L >= 0){vt <- V_R + V_L + V_TH}
else {vt <- 'Error : [V_R], [V_TH], [V_L] must be >= 0(vph). Please check that.'}
vt
}
V_T_int_si(V_R = 103, V_L = 384, V_TH = 2892)
#' Turn traffic volume ratio of the integrated lane group going straight + left + right at signalized intersection.
#'     It follows <Formula 8-25> in KHCM(2013), p.242.
#' @param V_R Right Turn Traffic Volume(vph). See \code{\link{V_R_si}}
#' @param V_L Left Turn Traffic Volume(vph)
#' @param V_TH Straight-through traffic (vph)
#' @seealso \code{\link{V_R_si}}, \code{\link{V_T_int_si}}
#' @keywords turn traffic volume ratio integrated lane group signalized intersection
#' @export P_LT_int_si
#' @examples
#' P_LT_int_si(V_R = 103, V_L = 384, V_TH = 2892)
P_LT_int_si <- function(V_R = NULL, V_L = NULL, V_TH = NULL){
V_T <- V_T_int_si(V_R = V_R, V_L = V_L, V_TH = V_TH)
if (is.numeric(V_T) == TRUE){plt <- V_L / V_T}
else {plt <- V_T}
plt
}
P_LT_int_si(V_R = 103, V_L = 384, V_TH = 2892)
#' Right turn traffic volume ratio of the integrated lane group going straight + left + right at signalized intersection.
#'     It follows <Formula 8-25> in KHCM(2013), p.242.
#' @param V_R Right Turn Traffic Volume(vph). See \code{\link{V_R_si}}
#' @param V_L Left Turn Traffic Volume(vph)
#' @param V_TH Straight-through traffic (vph)
#' @seealso \code{\link{V_R_si}}, \code{\link{V_T_int_si}}
#' @keywords turn traffic volume ratio integrated lane group signalized intersection
#' @export P_RT_int_si
#' @examples
#' P_RT_int_si(V_R = 103, V_L = 384, V_TH = 2892)
P_RT_int_si <- function(V_R = NULL, V_L = NULL, V_TH = NULL){
V_T <- V_T_int_si(V_R = V_R, V_L = V_L, V_TH = V_TH)
if (is.numeric(V_T) == TRUE){prt <- V_R / V_T}
else {prt <- V_T}
prt
}
P_RT_int_si(V_R = 103, V_L = 384, V_TH = 2892)
#' Left-turn Correction Factor for Left-turn Lanes Dedicated to Signalized Intersection
#'
#' Left-turn correction factor for left-turn lanes dedicated to signalized intersections
#'     This function follows <Formula 8-27> in KHCM(2013), p.243.
#' @param E_L Total straight-line conversion factor of the left turn itself in signalized intersection. \code{\link{E_L_si}}
#' @keywords left-turn correction factor dedicated lane signalized intersection
#' @seealso \code{\link{E_L_si}}
#' @export f_L_d_si Left turn correction factor
#' @examples
f_L_d_si <- function(E_L = NULL){
if (E_L > 0){f <- 1 / E_L}
else {f <- 'Error : [E_L] must be positive. Please check that.'}
f
}
f_L_d_si(E_L = 2.1)
#' Left Turn Correction Factor for Practically Dedicated Left Turn Lanes at Signalized Intersection
#'
#' Left turn correction factor for practically dedicated left turn lanes at signalized intersection.
#'     This function follows <Formula 8-28> in KHCM(2013), p.243.
#' @param E_L Total straight-line conversion factor of the left turn itself in signalized intersection. See \code{\link{E_L_si}}
#' @param P_L Turning traffic volume ratio of the practically dedicated left-turn lane group i at signalized intersection. See \code{\link{P_L_pd_si}}
#' @keywords Left turn correction factor practically dedicated lane signalized intersection
#' @seealso \code{\link{E_L_si}}, \code{\link{P_L_pd_si}}
#' @export f_L_pd_si Left turn correction factor
#' @examples
f_L_pd_si <- function(E_L = NULL, P_L = NULL){
if (is.numeric(E_L) == TRUE & P_L >= 0 & P_L <= 1){fl <- 1 / (1 + P_L * (E_L - 1))}
else {fl <- 'Error : [E_L] must be numeric. [P_L] must be >= 0 and <= 1. Please check that.'}
fl
}
f_L_pd_si(E_L = 2.1, P_L = 0.7)
#' Right Turn Correction Factor for Shared Right Turn Lanes at Signalized Intersection
#'
#' Right turn correction factor for shared right turn lanes at signalized intersections.
#'     This function follows <Formula 8-31> in KHCM(2013), p.243.
#' @param E_R Forward conversion coefficient for public right turns in a right turn lane at signalized intersection. See \code{\link{E_R_si}}
#' @param P_RT Turn traffic ratio for shared right-turn lane group i. See \code{\link{P_RT_sh_si}}
#' @keywords right turn correction factor shared lane signalized intersection
#' @seealso \code{\link{E_R_si}}, \code{\link{P_RT_sh_si}}
#' @export f_RT_sh_si Right turn correction factor
#' @examples
f_RT_sh_si <- function(E_R = NULL, P_RT = NULL){
if (is.numeric(E_R) == TRUE & P_R >= 0 & P_R <= 1){fr <- 1 / (1 + P_R * (E_R - 1))}
else {fr <- 'Error : [E_R] must be numeric. [P_R] must be >= 0 and <= 1. Please check that.'}
fr
}
f_RT_sh_si(E_R = 1.32, P_RT = 0.33)
#' Right Turn Correction Factor for Shared Right Turn Lanes at Signalized Intersection
#'
#' Right turn correction factor for shared right turn lanes at signalized intersections.
#'     This function follows <Formula 8-31> in KHCM(2013), p.243.
#' @param E_R Forward conversion coefficient for public right turns in a right turn lane at signalized intersection. See \code{\link{E_R_si}}
#' @param P_RT Turn traffic ratio for shared right-turn lane group i. See \code{\link{P_RT_sh_si}}
#' @keywords right turn correction factor shared lane signalized intersection
#' @seealso \code{\link{E_R_si}}, \code{\link{P_RT_sh_si}}
#' @export f_RT_sh_si Right turn correction factor
#' @examples
f_RT_sh_si <- function(E_R = NULL, P_RT = NULL){
if (is.numeric(E_R) == TRUE & P_RT >= 0 & P_RT <= 1){fr <- 1 / (1 + P_RT * (E_R - 1))}
else {fr <- 'Error : [E_R] must be numeric. [P_R] must be >= 0 and <= 1. Please check that.'}
fr
}
f_RT_sh_si(E_R = 1.32, P_RT = 0.33)
#'     This function follows <Formula 8-32> in KHCM(2013), p.243.
#' @param E_L Forward conversion coefficient for shared left turns in a left turn lane at signalized intersection. See \code{\link{E_L_si}}
#' @param E_R Forward conversion coefficient for shared right turns in a right turn lane at signalized intersection. See \code{\link{E_R_si}}
#' @param P_LT Turn traffic ratio for shared left-turn lane group i. See \code{\link{P_LT_sh_si}}
#' @param P_RT Turn traffic ratio for shared right-turn lane group i. See \code{\link{P_RT_sh_si}}
#' @keywords Left right turn correction factor integrated lane signalized intersection
#' @seealso \code{\link{E_L_si}}, \code{\link{E_R_si}}, \code{\link{P_LT_sh_si}}, \code{\link{P_RT_sh_si}}
#' @export f_int_si
#' @examples
#' f_int_si(E_L = 1.32, P_LT = 0.33)
f_int_si <- function(E_L = NULL, P_LT = NULL){
if (is.numeric(E_L) == TRUE & P_LT >= 0 & P_LT <= 1){
if (is.numeric(E_R) == TRUE & P_RT >= 0 & P_RT <= 1){
fint <- 1 / (1 + P_LT * (E_L - 1) + P_RT * (E_R - 1))
}
else {fint <- 'Error : [E_R] must be numeric. [P_RT] must be >= 0 and <= 1. Please check that.'}
}
else {fint <- 'Error : [E_L] must be numeric. [P_LT] must be >= 0 and <= 1. Please check that.'}
fint
}
f_int_si(E_L = 1.32, P_LT = 0.33, E_R = 1.44, P_RT = 0.5)
#'     This function follows <Formula 8-32> in KHCM(2013), p.243.
#' @param E_L Forward conversion coefficient for shared left turns in a left turn lane at signalized intersection. See \code{\link{E_L_si}}
#' @param E_R Forward conversion coefficient for shared right turns in a right turn lane at signalized intersection. See \code{\link{E_R_si}}
#' @param P_LT Turn traffic ratio for shared left-turn lane group i. See \code{\link{P_LT_sh_si}}
#' @param P_RT Turn traffic ratio for shared right-turn lane group i. See \code{\link{P_RT_sh_si}}
#' @keywords Left right turn correction factor integrated lane signalized intersection
#' @seealso \code{\link{E_L_si}}, \code{\link{E_R_si}}, \code{\link{P_LT_sh_si}}, \code{\link{P_RT_sh_si}}
#' @export f_int_si
#' @examples
#' f_int_si(E_L = 1.32, P_LT = 0.33)
f_int_si <- function(E_L = NULL, E_R = NULL, P_LT = NULL, P_RT = NULL){
if (is.numeric(E_L) == TRUE & P_LT >= 0 & P_LT <= 1){
if (is.numeric(E_R) == TRUE & P_RT >= 0 & P_RT <= 1){
fint <- 1 / (1 + P_LT * (E_L - 1) + P_RT * (E_R - 1))
}
else {fint <- 'Error : [E_R] must be numeric. [P_RT] must be >= 0 and <= 1. Please check that.'}
}
else {fint <- 'Error : [E_L] must be numeric. [P_LT] must be >= 0 and <= 1. Please check that.'}
fint
}
f_int_si(E_L = 1.32, P_LT = 0.33, E_R = 1.44, P_RT = 0.5)
