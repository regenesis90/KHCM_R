#' @keywords Nighttime Factor Expressway Basic day night
#' @export f_dk
#' @examples
#' f_dk(design_speed = 100, 'day')
#' f_dk(design_speed = 120, 'night')
#' f_dk(80, 'night')
f_dk <- function(design_speed = NULL, day_night = NULL){
if (day_night == 'day'){f_dk <- 1.00}
else if (day_night == 'night'){
if (design_speed == 80){f_dk <- 0.97}
else if (design_speed == 100){f_dk <- 0.93}
else if (design_speed == 120){f_dk <- 0.91}
else {'Error : [design_speed] must be one of [80], [100], [120]. Please check that.'}
}
else {'Error : [day_night] must be one of [day], [night]. Please check that.'}
f_dk
}
#' It is a coefficient indicating the effect of nighttime conditions on traffic flow under basic road traffic conditions.
#'     It follows <Table 2-11> in KHCM(2013), p.41.
#' @param design_speed Design speed. Choose one from : \code{120}, \code{100}, \code{80}
#' @param day_night Distinguish between day and night. Choose one from : \code{'day'}, \code{'night'}
#' @keywords Nighttime Factor Expressway Basic day night
#' @export f_dk
#' @examples
#' f_dk(design_speed = 100, 'day')
#' f_dk(design_speed = 120, 'night')
#' f_dk(80, 'night')
f_dk <- function(design_speed = NULL, day_night = NULL){
if (day_night == 'day'){f_dk <- 1.00}
else if (day_night == 'night'){
if (design_speed == 80){f_dk <- 0.97}
else if (design_speed == 100){f_dk <- 0.93}
else if (design_speed == 120){f_dk <- 0.91}
else {'Error : [design_speed] must be one of [80], [100], [120]. Please check that.'}
}
else {'Error : [day_night] must be one of [day], [night]. Please check that.'}
f_dk
}
ANLYS_expwy_basic(obs = 'one_side',
side_clearance = 1.75,
lane = 4,
lane_width = 3.5,
landform = 'hill',
P_T1 = 0, P_T2 = 0.2, P_T3 = 0,
v = 2000, PHF = 0.95,
design_speed = 100,
weather = 'sunny',
precip = 0,
day_night = 'day')
#' @param v Current or future traffic volume(vph). It must be positive. See \code{\link{DDHV}}.
#' @param PHF Peak Hour Factor(PHF). See \code{\link{PHF_expwy_basic}}.
#' @param design_speed Design speed. Choose one from : \code{120}, \code{100}, \code{80}
#' @param weather Weather condition. Choose one from : \code{'sunny'}, \code{'rainy'}, \code{'snowy'}
#' @param precip Rainfall or snowfall or hail. Precipitation(mm/h).
#' @param day_night Distinguish between day and night. Choose one from : \code{'day'}, \code{'night'}
#' @keywords analysis operating status LOS service level
#' @export ANLYS_expwy_basic_LOS
#' @examples
#' ANLYS_expwy_basic_LOS(80, 2, 3)
ANLYS_expwy_basic <- function(obs = NULL, side_clearance = NULL, lane = NULL, lane_width = NULL,
landform = NULL, P_T1 = NULL, P_T2 = NULL, P_T3 = NULL, P_hv = NULL, slope = NULL, slope_length = NULL,
v = NULL, PHF = NULL, design_speed = NULL, weather = NULL, precip = NULL, day_night = NULL){
f_hv <- f_hv_expwy_basic(landform = landform, P_T1 = P_T1, P_T2 = P_T2, P_T3 = P_T3, P_hv = P_hv, slope = slope, slope_length = slope_length)
print(f_hv)
f_w <- f_w_expwy_basic(obs = obs, side_clearance = side_clearance, lane = lane, lane_width = lane_width)
print(f_w)
f_iw <- f_iw_expwy_basic(design_speed = design_speed, weather = weather, precip = precip)
print(f_iw)
f_dk <- f_dk(design_speed = design_speed, day_night = day_night)
print(f_dk)
c_j <- capa_expwy_basic_j(design_speed = design_speed)
capacity <- capa_expwy_basic(c_j = c_j, N = N, f_w = f_w, f_hv = f_hv, f_iw = f_iw, f_dk = f_dk)
print(capacity)
V_P <- V_P(v = v, PHF = PHF)
print(V_P)
v_c_ratio <- V_P/capacity
print(v_c_ratio)
LOS <- LOS_expwy_basic(design_speed = design_speed, v_c_ratio = v_c_ratio)
print(LOS)
}
ANLYS_expwy_basic(obs = 'one_side',
side_clearance = 1.75,
lane = 4,
lane_width = 3.5,
landform = 'hill',
P_T1 = 0, P_T2 = 0.2, P_T3 = 0,
v = 2000, PHF = 0.95,
design_speed = 100,
weather = 'sunny',
precip = 0,
day_night = 'day')
#' @param v Current or future traffic volume(vph). It must be positive. See \code{\link{DDHV}}.
#' @param PHF Peak Hour Factor(PHF). See \code{\link{PHF_expwy_basic}}.
#' @param design_speed Design speed. Choose one from : \code{120}, \code{100}, \code{80}
#' @param weather Weather condition. Choose one from : \code{'sunny'}, \code{'rainy'}, \code{'snowy'}
#' @param precip Rainfall or snowfall or hail. Precipitation(mm/h).
#' @param day_night Distinguish between day and night. Choose one from : \code{'day'}, \code{'night'}
#' @keywords analysis operating status LOS service level
#' @export ANLYS_expwy_basic_LOS
#' @examples
#' ANLYS_expwy_basic_LOS(80, 2, 3)
ANLYS_expwy_basic <- function(obs = NULL, side_clearance = NULL, lane = NULL, lane_width = NULL,
landform = NULL, P_T1 = NULL, P_T2 = NULL, P_T3 = NULL, P_hv = NULL, slope = NULL, slope_length = NULL,
v = NULL, PHF = NULL, design_speed = NULL, weather = NULL, precip = NULL, day_night = NULL){
f_hv <- f_hv_expwy_basic(landform = landform, P_T1 = P_T1, P_T2 = P_T2, P_T3 = P_T3, P_hv = P_hv, slope = slope, slope_length = slope_length)
print(f_hv)
f_w <- f_w_expwy_basic(obs = obs, side_clearance = side_clearance, lane = lane, lane_width = lane_width)
print(f_w)
f_iw <- f_iw_expwy_basic(design_speed = design_speed, weather = weather, precip = precip)
print(f_iw)
f_dk <- f_dk(design_speed = design_speed, day_night = day_night)
print(f_dk)
c_j <- capa_expwy_basic_j(design_speed = design_speed)
N <- lane/2
capacity <- capa_expwy_basic(c_j = c_j, N = N, f_w = f_w, f_hv = f_hv, f_iw = f_iw, f_dk = f_dk)
print(capacity)
V_P <- V_P(v = v, PHF = PHF)
print(V_P)
v_c_ratio <- V_P/capacity
print(v_c_ratio)
LOS <- LOS_expwy_basic(design_speed = design_speed, v_c_ratio = v_c_ratio)
print(LOS)
}
ANLYS_expwy_basic(obs = 'one_side',
side_clearance = 1.75,
lane = 4,
lane_width = 3.5,
landform = 'hill',
P_T1 = 0, P_T2 = 0.2, P_T3 = 0,
v = 2000, PHF = 0.95,
design_speed = 100,
weather = 'sunny',
precip = 0,
day_night = 'day')
ANLYS_expwy_basic(obs = 'one_side',
side_clearance = 1.75,
lane = 4,
lane_width = 3.5,
landform = 'hill',
P_T1 = 0, P_T2 = 0.2, P_T3 = 0,
v = 2000, PHF = 0.95,
design_speed = 100,
weather = 'sunny',
precip = 0,
day_night = 'day')
#' @param v Current or future traffic volume(vph). It must be positive. See \code{\link{DDHV}}.
#' @param PHF Peak Hour Factor(PHF). See \code{\link{PHF_expwy_basic}}.
#' @param design_speed Design speed. Choose one from : \code{120}, \code{100}, \code{80}
#' @param weather Weather condition. Choose one from : \code{'sunny'}, \code{'rainy'}, \code{'snowy'}
#' @param precip Rainfall or snowfall or hail. Precipitation(mm/h).
#' @param day_night Distinguish between day and night. Choose one from : \code{'day'}, \code{'night'}
#' @keywords analysis operating status LOS service level
#' @export ANLYS_expwy_basic_LOS
#' @examples
#' ANLYS_expwy_basic_LOS(80, 2, 3)
ANLYS_expwy_basic <- function(obs = NULL, side_clearance = NULL, lane = NULL, lane_width = NULL,
landform = NULL, P_T1 = NULL, P_T2 = NULL, P_T3 = NULL, P_hv = NULL, slope = NULL, slope_length = NULL,
v = NULL, PHF = NULL, design_speed = NULL, weather = NULL, precip = NULL, day_night = NULL){
f_hv <- f_hv_expwy_basic(landform = landform, P_T1 = P_T1, P_T2 = P_T2, P_T3 = P_T3, P_hv = P_hv, slope = slope, slope_length = slope_length)
print(f_hv)
f_w <- f_w_expwy_basic(obs = obs, side_clearance = side_clearance, lane = lane, lane_width = lane_width)
print(f_w)
f_iw <- f_iw_expwy_basic(design_speed = design_speed, weather = weather, precip = precip)
print(f_iw)
f_dk <- f_dk(design_speed = design_speed, day_night = day_night)
print(f_dk)
c_j <- capa_expwy_basic_j(design_speed = design_speed)
N <- lane/2
capacity <- capa_expwy_basic(c_j = c_j, N = N, f_w = f_w, f_hv = f_hv, f_iw = f_iw, f_dk = f_dk)
print(capacity)
V_P <- V_P(v = v, PHF = PHF)
print(V_P)
v_c_ratio <- V_P/capacity
print(v_c_ratio)
LOS <- LOS_expwy_basic(design_speed = design_speed, v_c_ratio = v_c_ratio)
print(LOS)
}
ANLYS_expwy_basic(obs = 'one_side',
side_clearance = 1.75,
lane = 4,
lane_width = 3.5,
landform = 'hill',
P_T1 = 0, P_T2 = 0.2, P_T3 = 0,
v = 2000, PHF = 0.95,
design_speed = 100,
weather = 'sunny',
precip = 0,
day_night = 'day')
#' @param v Current or future traffic volume(vph). It must be positive. See \code{\link{DDHV}}.
#' @param PHF Peak Hour Factor(PHF). See \code{\link{PHF_expwy_basic}}.
#' @param design_speed Design speed. Choose one from : \code{120}, \code{100}, \code{80}
#' @param weather Weather condition. Choose one from : \code{'sunny'}, \code{'rainy'}, \code{'snowy'}
#' @param precip Rainfall or snowfall or hail. Precipitation(mm/h).
#' @param day_night Distinguish between day and night. Choose one from : \code{'day'}, \code{'night'}
#' @keywords analysis operating status LOS service level
#' @export ANLYS_expwy_basic_LOS
#' @examples
#' ANLYS_expwy_basic_LOS(80, 2, 3)
ANLYS_expwy_basic <- function(obs = NULL, side_clearance = NULL, lane = NULL, lane_width = NULL,
landform = NULL, P_T1 = NULL, P_T2 = NULL, P_T3 = NULL, P_hv = NULL, slope = NULL, slope_length = NULL,
v = NULL, PHF = NULL, design_speed = NULL, weather = NULL, precip = NULL, day_night = NULL){
f_hv <- f_hv_expwy_basic(landform = landform, P_T1 = P_T1, P_T2 = P_T2, P_T3 = P_T3, P_hv = P_hv, slope = slope, slope_length = slope_length)
print(f_hv)
f_w <- f_w_expwy_basic(obs = obs, side_clearance = side_clearance, lane = lane, lane_width = lane_width)
print(f_w)
f_iw <- f_iw_expwy_basic(design_speed = design_speed, weather = weather, precip = precip)
print(f_iw)
f_dk <- f_dk(design_speed = design_speed, day_night = day_night)
print(f_dk)
c_j <- capa_expwy_basic_j(design_speed = design_speed)
print(c_j)
N <- lane/2
print(N)
capacity <- capa_expwy_basic(c_j = c_j, N = N, f_w = f_w, f_hv = f_hv, f_iw = f_iw, f_dk = f_dk)
print(capacity)
V_P <- V_P(v = v, PHF = PHF)
print(V_P)
v_c_ratio <- V_P/capacity
print(v_c_ratio)
LOS <- LOS_expwy_basic(design_speed = design_speed, v_c_ratio = v_c_ratio)
print(LOS)
}
ANLYS_expwy_basic(obs = 'one_side',
side_clearance = 1.75,
lane = 4,
lane_width = 3.5,
landform = 'hill',
P_T1 = 0, P_T2 = 0.2, P_T3 = 0,
v = 2000, PHF = 0.95,
design_speed = 100,
weather = 'sunny',
precip = 0,
day_night = 'day')
#' Traffic Volume Converted to Peak Hour
#'
#' This function calculates traffic volume converted to peak hour(vph) by using PHF(peak hour factor).
#'    It follows <Formula 2-7> in KHCM(2013), p.17, 30.
#' @param v Current or future traffic volume(vph). It must be positive. See \code{\link{DDHV}}.
#' @param PHF Peak Hour Factor(PHF). See \code{\link{PHF_expwy_basic}}.
#' @export V_P_expwy_basic \code{V/PHF}(vph)
#' @examples
#' V_P_expwy_basic(1200, 0.98)
#' V_P_expwy_basic(b = 1300, PHF = 0.93)
V_P_expwy_basic <- function(v = NULL, PHF = NULL){
if (v > 0){
if (PHF >= 0 & PHF < 1){res <- v/PHF}
else {res <- 'Error : [PHF] must be positive, and less than 1. Please check that. See [PHF_expwy_basic()].'}
}
else {res <- 'Error : [V] must be positive(vph). Please check that. See [DDHV()].'}
res
}
#' @param v Current or future traffic volume(vph). It must be positive. See \code{\link{DDHV}}.
#' @param PHF Peak Hour Factor(PHF). See \code{\link{PHF_expwy_basic}}.
#' @param design_speed Design speed. Choose one from : \code{120}, \code{100}, \code{80}
#' @param weather Weather condition. Choose one from : \code{'sunny'}, \code{'rainy'}, \code{'snowy'}
#' @param precip Rainfall or snowfall or hail. Precipitation(mm/h).
#' @param day_night Distinguish between day and night. Choose one from : \code{'day'}, \code{'night'}
#' @keywords analysis operating status LOS service level
#' @export ANLYS_expwy_basic_LOS
#' @examples
#' ANLYS_expwy_basic_LOS(80, 2, 3)
ANLYS_expwy_basic <- function(obs = NULL, side_clearance = NULL, lane = NULL, lane_width = NULL,
landform = NULL, P_T1 = NULL, P_T2 = NULL, P_T3 = NULL, P_hv = NULL, slope = NULL, slope_length = NULL,
v = NULL, PHF = NULL, design_speed = NULL, weather = NULL, precip = NULL, day_night = NULL){
f_hv <- f_hv_expwy_basic(landform = landform, P_T1 = P_T1, P_T2 = P_T2, P_T3 = P_T3, P_hv = P_hv, slope = slope, slope_length = slope_length)
print(f_hv)
f_w <- f_w_expwy_basic(obs = obs, side_clearance = side_clearance, lane = lane, lane_width = lane_width)
print(f_w)
f_iw <- f_iw_expwy_basic(design_speed = design_speed, weather = weather, precip = precip)
print(f_iw)
f_dk <- f_dk(design_speed = design_speed, day_night = day_night)
print(f_dk)
c_j <- capa_expwy_basic_j(design_speed = design_speed)
print(c_j)
N <- lane/2
print(N)
capacity <- capa_expwy_basic(c_j = c_j, N = N, f_w = f_w, f_hv = f_hv, f_iw = f_iw, f_dk = f_dk)
print(capacity)
V_P <- V_P(v = v, PHF = PHF)
print(V_P)
v_c_ratio <- V_P/capacity
print(v_c_ratio)
LOS <- LOS_expwy_basic(design_speed = design_speed, v_c_ratio = v_c_ratio)
print(LOS)
}
ANLYS_expwy_basic(obs = 'one_side',
side_clearance = 1.75,
lane = 4,
lane_width = 3.5,
landform = 'hill',
P_T1 = 0, P_T2 = 0.2, P_T3 = 0,
v = 2000, PHF = 0.95,
design_speed = 100,
weather = 'sunny',
precip = 0,
day_night = 'day')
#' Traffic Volume Converted to Peak Hour
#'
#' This function calculates traffic volume converted to peak hour(vph) by using PHF(peak hour factor).
#'    It follows <Formula 2-7> in KHCM(2013), p.17, 30.
#' @param v Current or future traffic volume(vph). It must be positive. See \code{\link{DDHV}}.
#' @param PHF Peak Hour Factor(PHF). See \code{\link{PHF_expwy_basic}}.
#' @export V_P_expwy_basic \code{V/PHF}(vph)
#' @examples
#' V_P_expwy_basic(1200, 0.98)
#' V_P_expwy_basic(b = 1300, PHF = 0.93)
V_P_expwy_basic <- function(v = NULL, PHF = NULL){
if (v > 0){
if (PHF >= 0 & PHF < 1){res <- v/PHF}
else {res <- 'Error : [PHF] must be positive, and less than 1. Please check that. See [PHF_expwy_basic()].'}
}
else {res <- 'Error : [v] must be positive(vph). Please check that. See [DDHV()].'}
res
}
#' @param v Current or future traffic volume(vph). It must be positive. See \code{\link{DDHV}}.
#' @param PHF Peak Hour Factor(PHF). See \code{\link{PHF_expwy_basic}}.
#' @param design_speed Design speed. Choose one from : \code{120}, \code{100}, \code{80}
#' @param weather Weather condition. Choose one from : \code{'sunny'}, \code{'rainy'}, \code{'snowy'}
#' @param precip Rainfall or snowfall or hail. Precipitation(mm/h).
#' @param day_night Distinguish between day and night. Choose one from : \code{'day'}, \code{'night'}
#' @keywords analysis operating status LOS service level
#' @export ANLYS_expwy_basic_LOS
#' @examples
#' ANLYS_expwy_basic_LOS(80, 2, 3)
ANLYS_expwy_basic <- function(obs = NULL, side_clearance = NULL, lane = NULL, lane_width = NULL,
landform = NULL, P_T1 = NULL, P_T2 = NULL, P_T3 = NULL, P_hv = NULL, slope = NULL, slope_length = NULL,
v = NULL, PHF = NULL, design_speed = NULL, weather = NULL, precip = NULL, day_night = NULL){
f_hv <- f_hv_expwy_basic(landform = landform, P_T1 = P_T1, P_T2 = P_T2, P_T3 = P_T3, P_hv = P_hv, slope = slope, slope_length = slope_length)
print(f_hv)
f_w <- f_w_expwy_basic(obs = obs, side_clearance = side_clearance, lane = lane, lane_width = lane_width)
print(f_w)
f_iw <- f_iw_expwy_basic(design_speed = design_speed, weather = weather, precip = precip)
print(f_iw)
f_dk <- f_dk(design_speed = design_speed, day_night = day_night)
print(f_dk)
c_j <- capa_expwy_basic_j(design_speed = design_speed)
print(c_j)
N <- lane/2
print(N)
capacity <- capa_expwy_basic(c_j = c_j, N = N, f_w = f_w, f_hv = f_hv, f_iw = f_iw, f_dk = f_dk)
print(capacity)
V_P <- V_P(v = v, PHF = PHF)
print(V_P)
v_c_ratio <- V_P/capacity
print(v_c_ratio)
LOS <- LOS_expwy_basic(design_speed = design_speed, v_c_ratio = v_c_ratio)
print(LOS)
}
ANLYS_expwy_basic(obs = 'one_side',
side_clearance = 1.75,
lane = 4,
lane_width = 3.5,
landform = 'hill',
P_T1 = 0, P_T2 = 0.2, P_T3 = 0,
v = 2000, PHF = 0.95,
design_speed = 100,
weather = 'sunny',
precip = 0,
day_night = 'day')
#' @param v Current or future traffic volume(vph). It must be positive. See \code{\link{DDHV}}.
#' @param PHF Peak Hour Factor(PHF). See \code{\link{PHF_expwy_basic}}.
#' @param design_speed Design speed. Choose one from : \code{120}, \code{100}, \code{80}
#' @param weather Weather condition. Choose one from : \code{'sunny'}, \code{'rainy'}, \code{'snowy'}
#' @param precip Rainfall or snowfall or hail. Precipitation(mm/h).
#' @param day_night Distinguish between day and night. Choose one from : \code{'day'}, \code{'night'}
#' @keywords analysis operating status LOS service level
#' @export ANLYS_expwy_basic_LOS
#' @examples
#' ANLYS_expwy_basic_LOS(80, 2, 3)
ANLYS_expwy_basic <- function(obs = NULL, side_clearance = NULL, lane = NULL, lane_width = NULL,
landform = NULL, P_T1 = NULL, P_T2 = NULL, P_T3 = NULL, P_hv = NULL, slope = NULL, slope_length = NULL,
v = NULL, PHF = NULL, design_speed = NULL, weather = NULL, precip = NULL, day_night = NULL){
f_hv <- f_hv_expwy_basic(landform = landform, P_T1 = P_T1, P_T2 = P_T2, P_T3 = P_T3, P_hv = P_hv, slope = slope, slope_length = slope_length)
print(f_hv)
f_w <- f_w_expwy_basic(obs = obs, side_clearance = side_clearance, lane = lane, lane_width = lane_width)
print(f_w)
f_iw <- f_iw_expwy_basic(design_speed = design_speed, weather = weather, precip = precip)
print(f_iw)
f_dk <- f_dk(design_speed = design_speed, day_night = day_night)
print(f_dk)
c_j <- capa_expwy_basic_j(design_speed = design_speed)
print(c_j)
N <- lane/2
print(N)
capacity <- capa_expwy_basic(c_j = c_j, N = N, f_w = f_w, f_hv = f_hv, f_iw = f_iw, f_dk = f_dk)
print(capacity)
V_P <- V_P_expwy_basic(v = v, PHF = PHF)
print(V_P)
v_c_ratio <- V_P/capacity
print(v_c_ratio)
LOS <- LOS_expwy_basic(design_speed = design_speed, v_c_ratio = v_c_ratio)
print(LOS)
}
ANLYS_expwy_basic(obs = 'one_side',
side_clearance = 1.75,
lane = 4,
lane_width = 3.5,
landform = 'hill',
P_T1 = 0, P_T2 = 0.2, P_T3 = 0,
v = 2000, PHF = 0.95,
design_speed = 100,
weather = 'sunny',
precip = 0,
day_night = 'day')
ANLYS_expwy_basic(obs = 'one_side',
side_clearance = 1.75,
lane = 4,
N = 2,
lane_width = 3.5,
landform = 'hill',
P_T1 = 0, P_T2 = 0.2, P_T3 = 0,
v = 2000, PHF = 0.95,
design_speed = 100,
weather = 'sunny',
precip = 0,
day_night = 'day')
#' @param v Current or future traffic volume(vph). It must be positive. See \code{\link{DDHV}}.
#' @param PHF Peak Hour Factor(PHF). See \code{\link{PHF_expwy_basic}}.
#' @param design_speed Design speed. Choose one from : \code{120}, \code{100}, \code{80}
#' @param weather Weather condition. Choose one from : \code{'sunny'}, \code{'rainy'}, \code{'snowy'}
#' @param precip Rainfall or snowfall or hail. Precipitation(mm/h).
#' @param day_night Distinguish between day and night. Choose one from : \code{'day'}, \code{'night'}
#' @keywords analysis operating status LOS service level
#' @export ANLYS_expwy_basic_LOS
#' @examples
#' ANLYS_expwy_basic_LOS(80, 2, 3)
ANLYS_expwy_basic <- function(obs = NULL, side_clearance = NULL, lane = NULL, N = NULL, lane_width = NULL,
landform = NULL, P_T1 = NULL, P_T2 = NULL, P_T3 = NULL, P_hv = NULL, slope = NULL, slope_length = NULL,
v = NULL, PHF = NULL, design_speed = NULL, weather = NULL, precip = NULL, day_night = NULL){
f_hv <- f_hv_expwy_basic(landform = landform, P_T1 = P_T1, P_T2 = P_T2, P_T3 = P_T3, P_hv = P_hv, slope = slope, slope_length = slope_length)
f_w <- f_w_expwy_basic(obs = obs, side_clearance = side_clearance, lane = lane, lane_width = lane_width)
f_iw <- f_iw_expwy_basic(design_speed = design_speed, weather = weather, precip = precip)
f_dk <- f_dk(design_speed = design_speed, day_night = day_night)
c_j <- capa_expwy_basic_j(design_speed = design_speed)
capacity <- capa_expwy_basic(c_j = c_j, N = N, f_w = f_w, f_hv = f_hv, f_iw = f_iw, f_dk = f_dk)
V_P <- V_P_expwy_basic(v = v, PHF = PHF)
v_c_ratio <- V_P/capacity
LOS <- LOS_expwy_basic(design_speed = design_speed, v_c_ratio = v_c_ratio)
}
ANLYS_expwy_basic(obs = 'one_side',
side_clearance = 1.75,
lane = 4,
N = 2,
lane_width = 3.5,
landform = 'hill',
P_T1 = 0, P_T2 = 0.2, P_T3 = 0,
v = 2000, PHF = 0.95,
design_speed = 100,
weather = 'sunny',
precip = 0,
day_night = 'day')
#' @param v Current or future traffic volume(vph). It must be positive. See \code{\link{DDHV}}.
#' @param PHF Peak Hour Factor(PHF). See \code{\link{PHF_expwy_basic}}.
#' @param design_speed Design speed. Choose one from : \code{120}, \code{100}, \code{80}
#' @param weather Weather condition. Choose one from : \code{'sunny'}, \code{'rainy'}, \code{'snowy'}
#' @param precip Rainfall or snowfall or hail. Precipitation(mm/h).
#' @param day_night Distinguish between day and night. Choose one from : \code{'day'}, \code{'night'}
#' @keywords analysis operating status LOS service level
#' @export ANLYS_expwy_basic_LOS
#' @examples
#' ANLYS_expwy_basic_LOS(80, 2, 3)
ANLYS_expwy_basic <- function(obs = NULL, side_clearance = NULL, lane = NULL, N = NULL, lane_width = NULL,
landform = NULL, P_T1 = NULL, P_T2 = NULL, P_T3 = NULL, P_hv = NULL, slope = NULL, slope_length = NULL,
v = NULL, PHF = NULL, design_speed = NULL, weather = NULL, precip = NULL, day_night = NULL){
f_hv <- f_hv_expwy_basic(landform = landform, P_T1 = P_T1, P_T2 = P_T2, P_T3 = P_T3, P_hv = P_hv, slope = slope, slope_length = slope_length)
f_w <- f_w_expwy_basic(obs = obs, side_clearance = side_clearance, lane = lane, lane_width = lane_width)
f_iw <- f_iw_expwy_basic(design_speed = design_speed, weather = weather, precip = precip)
f_dk <- f_dk(design_speed = design_speed, day_night = day_night)
c_j <- capa_expwy_basic_j(design_speed = design_speed)
capacity <- capa_expwy_basic(c_j = c_j, N = N, f_w = f_w, f_hv = f_hv, f_iw = f_iw, f_dk = f_dk)
V_P <- V_P_expwy_basic(v = v, PHF = PHF)
v_c_ratio <- V_P/capacity
LOS <- LOS_expwy_basic(design_speed = design_speed, v_c_ratio = v_c_ratio)
LOS
}
ANLYS_expwy_basic(obs = 'one_side',
side_clearance = 1.75,
lane = 4,
N = 2,
lane_width = 3.5,
landform = 'hill',
P_T1 = 0, P_T2 = 0.2, P_T3 = 0,
v = 2000, PHF = 0.95,
design_speed = 100,
weather = 'sunny',
precip = 0,
day_night = 'day')
#' @param v Current or future traffic volume(vph). It must be positive. See \code{\link{DDHV}}.
#' @param PHF Peak Hour Factor(PHF). See \code{\link{PHF_expwy_basic}}.
#' @param design_speed Design speed. Choose one from : \code{120}, \code{100}, \code{80}
#' @param weather Weather condition. Choose one from : \code{'sunny'}, \code{'rainy'}, \code{'snowy'}
#' @param precip Rainfall or snowfall or hail. Precipitation(mm/h).
#' @param day_night Distinguish between day and night. Choose one from : \code{'day'}, \code{'night'}
#' @keywords analysis operating status LOS service level
#' @export ANLYS_expwy_basic_LOS
#' @examples
#' ANLYS_expwy_basic_LOS(80, 2, 3)
ANLYS_expwy_basic <- function(data = NULL,
obs = NULL, side_clearance = NULL, lane = NULL, N = NULL, lane_width = NULL,
landform = NULL, P_T1 = NULL, P_T2 = NULL, P_T3 = NULL, P_hv = NULL, slope = NULL, slope_length = NULL,
v = NULL, PHF = NULL, design_speed = NULL, weather = NULL, precip = NULL, day_night = NULL){
f_hv <- f_hv_expwy_basic(landform = landform, P_T1 = P_T1, P_T2 = P_T2, P_T3 = P_T3, P_hv = P_hv, slope = slope, slope_length = slope_length)
f_w <- f_w_expwy_basic(obs = obs, side_clearance = side_clearance, lane = lane, lane_width = lane_width)
f_iw <- f_iw_expwy_basic(design_speed = design_speed, weather = weather, precip = precip)
f_dk <- f_dk(design_speed = design_speed, day_night = day_night)
c_j <- capa_expwy_basic_j(design_speed = design_speed)
capacity <- capa_expwy_basic(c_j = c_j, N = N, f_w = f_w, f_hv = f_hv, f_iw = f_iw, f_dk = f_dk)
V_P <- V_P_expwy_basic(v = v, PHF = PHF)
v_c_ratio <- V_P/capacity
LOS <- LOS_expwy_basic(design_speed = design_speed, v_c_ratio = v_c_ratio)
LOS
}
