}
t_p_km_arterial_central_bus_lane(0.32, 'yes', 1)
#'
#' It follows <Formula 12-10> in KHCM(2013) p.551. 3600 means Conversion factor for converting speed units of m/sec to km/hour
#' @param L section length(km)
#' @param T_bus See T_bus(). Travel time (seconds) of the analysis section of the exclusive median bus lane
#' @param T_others See T_others(). Travel time (seconds) of the general lane analysis section
#' @param V_bus Peak traffic volume (large/hour) in the analysis section of the exclusive median bus lane
#' @param V_others Peak traffic volume of general lane analysis section (large/hour)
#' @keywords
#' @export avg_speed_segment
#' @examples
avg_speed_segment <- function(L = NULL, T_bus = NULL, T_others = NULL, V_bus = NULL, V_others = NULL){
3600 * (V_bus + V_others) * L / (V_bus * T_bus + V_others * T_others)
}
#' Central bus lane analysis section travel time (T_bus, seconds)
#'
#' It follows <Formula 12-11> in KHCM(2013) p.552.
#' @param t_p_km_arterial_central_bus_lane see function. Total travel time (sec/km) per km of some sections of exclusive median bus lanes or general lanes
#' @param l Length of analysis section (km)
#' @param d Total access delay (s) at all intersections within the analysis target range as a part of the exclusive median bus lane or general lane
#' @keywords
#' @export T_bus
#' @examples
T_bus <- function(t_p_km_arterial_central_bus_lane = NULL, l = NULL, d = NUL){
t_p_km_arterial_central_bus_lane * l + d
}
#'
#' It follows <Formula 12-12> in KHCM(2013) p.552. 3600 means Conversion factor for converting speed units of m/sec to km/hour
#' @param L section length(km)
#' @param T_bus See T_bus(). Travel time (seconds) of the analysis section of the exclusive median bus lane
#' @param T_others See T_others(). Travel time (seconds) of the general lane analysis section
#' @param V_bus Peak traffic volume (large/hour) in the analysis section of the exclusive median bus lane
#' @param V_others Peak traffic volume of general lane analysis section (large/hour)
#' @keywords
#' @export avg_speed_segment
#' @examples
avg_speed_total <- function(L = NULL, T_bus = NULL, T_others = NULL, V_bus = NULL, V_others = NULL){
vsum <- 0
vtsum <- 0
for (i in 1:length(V_bus)){
v <- V_bus[i] + V_others[i]
vt <- V_bus[i] * T_bus[i] + V_others[i] * T_others[i]
vsum <- vsum + v
vtsum <- vtsum + vt
}
3600 * l * vsum / vtsum
}
#' In-vehicle service level of seat-type bus(LOS_seat_bus)
#'
#' It follows <Table 13-3> in KHCM(2013), p.593.
#'     It based on the vehicle area of 23.30㎡, standing area of 3.77㎡, 45 seats.
#' @param n_psg Number of passenger
#' @param psg_by_seat Number of occupants per seat
#' @param area_psg Area occupied per passenger
#' @export LOS \code{'A'}, \code{'B'}, \code{'C'}, \code{'D'}, \code{'E'}, \code{'F'}
#' @examples
LOS_seat_bus <- function(n_psg = NULL, psg_by_seat = NULL, area_psg = NULL){
if ((n_psg >= 0 & n_psg <= 22) | (psg_by_seat >= 0 & psg_by_seat <= 0.50) | (area_psg > 1.05)){los <- 'A'}
if ((n_psg > 22 & n_psg <= 34) | (psg_by_seat > 0.5 & psg_by_seat <= 0.75) | (area_psg > 0.68 & area_psg <= 1.05)){los <- 'B'}
if ((n_psg > 34 & n_psg <= 45) | (psg_by_seat > 0.75 & psg_by_seat <= 1.00) | (area_psg > 0.51 & area_psg <= 0.68)){los <- 'C'}
if ((n_psg > 45 & n_psg <= 57) | (psg_by_seat >= 1.00 & psg_by_seat <= 1.20) | (area_psg > 0.40 & area_psg <= 0.51)){los <- 'D'}
if ((n_psg > 57 & n_psg <= 70) | (psg_by_seat >= 1.20 & psg_by_seat <= 1.37) | (area_psg > 0.33 & area_psg <= 0.40)){los <- 'E'}
if ((n_psg > 70) | (psg_by_seat > 1.37) | (area_psg <= 0.33)){los <- 'F'}
los
}
LOS_seat_bus(n_psg = 30)
#' In-vehicle service level of seat-type bus(LOS_seat_bus)
#'
#' It follows <Table 13-3> in KHCM(2013), p.593.
#'     It based on the vehicle area of 23.30㎡, standing area of 3.77㎡, 45 seats.
#' @param n_psg Number of passenger
#' @param psg_by_seat Number of occupants per seat
#' @param area_psg Area occupied per passenger
#' @export LOS \code{'A'}, \code{'B'}, \code{'C'}, \code{'D'}, \code{'E'}, \code{'F'}
#' @examples
#'
LOS_seat_bus <- function(n_psg = NULL, psg_by_seat = NULL, area_psg = NULL){
if ((n_psg >= 0 & n_psg <= 22) | (psg_by_seat >= 0 & psg_by_seat <= 0.50) | area_psg > 1.05){los <- 'A'}
if ((n_psg > 22 & n_psg <= 34) | (psg_by_seat > 0.5 & psg_by_seat <= 0.75) | (area_psg > 0.68 & area_psg <= 1.05)){los <- 'B'}
if ((n_psg > 34 & n_psg <= 45) | (psg_by_seat > 0.75 & psg_by_seat <= 1.00) | (area_psg > 0.51 & area_psg <= 0.68)){los <- 'C'}
if ((n_psg > 45 & n_psg <= 57) | (psg_by_seat >= 1.00 & psg_by_seat <= 1.20) | (area_psg > 0.40 & area_psg <= 0.51)){los <- 'D'}
if ((n_psg > 57 & n_psg <= 70) | (psg_by_seat >= 1.20 & psg_by_seat <= 1.37) | (area_psg > 0.33 & area_psg <= 0.40)){los <- 'E'}
if ((n_psg > 70) | (psg_by_seat > 1.37) | (area_psg <= 0.33)){los <- 'F'}
los
}
LOS_seat_bus(n_psg = 30)
}
LOS_seat_bus(n_psg = 30)
}
LOS_seat_bus(n_psg = 30)
}
}
}
}
#' In-vehicle service level of seat-type bus(LOS_seat_bus)
#'
#' It follows <Table 13-3> in KHCM(2013), p.593.
#'     It based on the vehicle area of 23.30㎡, standing area of 3.77㎡, 45 seats.
#' @param n_psg Number of passenger
#' @param psg_by_seat Number of occupants per seat
#' @param area_psg Area occupied per passenger
#' @export LOS \code{'A'}, \code{'B'}, \code{'C'}, \code{'D'}, \code{'E'}, \code{'F'}
#' @examples
#'
LOS_seat_bus <- function(n_psg = NULL, psg_by_seat = NULL, area_psg = NULL){
if (is.null(n_psg) == FALSE){
if (n_psg >= 0 & n_psg <= 22){los <- 'A'}
if (n_psg > 22 & n_psg <= 34){los <- 'B'}
if (n_psg > 34 & n_psg <= 45){los <- 'C'}
if (n_psg > 45 & n_psg <= 57){los <- 'D'}
if (n_psg > 57 & n_psg <= 70){los <- 'E'}
if (n_psg > 70){los <- 'F'}
}
los
}
LOS_seat_bus(n_psg = 30)
#' In-vehicle service level of seat-type bus(LOS_seat_bus)
#'
#' It follows <Table 13-3> in KHCM(2013), p.593.
#'     It based on the vehicle area of 23.30㎡, standing area of 3.77㎡, 45 seats.
#' @param n_psg Number of passenger
#' @param psg_by_seat Number of occupants per seat
#' @param area_psg Area occupied per passenger
#' @export LOS \code{'A'}, \code{'B'}, \code{'C'}, \code{'D'}, \code{'E'}, \code{'F'}
#' @examples
#'
LOS_seat_bus <- function(n_psg = NULL, psg_by_seat = NULL, area_psg = NULL){
if (is.null(n_psg) == FALSE){
if (n_psg >= 0 & n_psg <= 22){los <- 'A'}
if (n_psg > 22 & n_psg <= 34){los <- 'B'}
if (n_psg > 34 & n_psg <= 45){los <- 'C'}
if (n_psg > 45 & n_psg <= 57){los <- 'D'}
if (n_psg > 57 & n_psg <= 70){los <- 'E'}
if (n_psg > 70){los <- 'F'}
}
else{
if (is.null(psg_by_seat) == FALSE){
if (psg_by_seat >= 0 & psg_by_seat <= 0.50){los <- 'A'}
if (psg_by_seat > 0.5 & psg_by_seat <= 0.75){los <- 'B'}
if (psg_by_seat > 0.75 & psg_by_seat <= 1.00){los <- 'C'}
if (psg_by_seat >= 1.00 & psg_by_seat <= 1.20){los <- 'D'}
if (psg_by_seat >= 1.20 & psg_by_seat <= 1.37){los <- 'E'}
if (psg_by_seat > 1.37){los <- 'F'}
}
else{
if (area_psg > 1.05){los <- 'A'}
if (area_psg > 0.68 & area_psg <= 1.05){los <- 'B'}
if (area_psg > 0.51 & area_psg <= 0.68){los <- 'C'}
if (area_psg > 0.40 & area_psg <= 0.51){los <- 'D'}
if (area_psg > 0.33 & area_psg <= 0.40){los <- 'E'}
if (area_psg <= 0.33){los <- 'F'}
}
}
los
}
LOS_seat_bus(n_psg = 30)
LOS_seat_bus(psg_by_seat = 0.98)
LOS_seat_bus(area_psg = 0.33)
#' It follows <Table 13-4> in KHCM(2013), p.594.
#'     It based on following standard.
#'     * City Bus : vehicle area of 26.37㎡, standing area of 7.5㎡, 31 seats.
#'     * Circular Bus : vehicle area of 16.05㎡, standing area of 3.48㎡, 24 seats.
#' @param type Choose one from: \code{'city'}, \code{'circular'}
#' @param n_psg Number of passenger
#' @param psg_by_seat Number of occupants per seat
#' @param area_psg Area occupied per passenger
#' @export LOS_bus_standing \code{'A'}, \code{'B'}, \code{'C'}, \code{'D'}, \code{'E'}, \code{'F'}
#' @examples
LOS_bus_standing <- function(type = NULL, n_psg = NULL, psg_by_seat = NULL, area_psg = NULL){
if (type == 'city'){
if (is.null(n_psg) == FALSE){
if (n_psg >= 0 & n_psg <= 15){los <- 'A'}
if (n_psg > 15 & n_psg <= 31){los <- 'B'}
if (n_psg > 31 & n_psg <= 40){los <- 'C'}
if (n_psg > 40 & n_psg <= 50){los <- 'D'}
if (n_psg > 50 & n_psg <= 62){los <- 'E'}
if (n_psg > 62){los <- 'F'}
}
else{
if (is.null(psg_by_seat) == FALSE){
if (psg_by_seat >= 0 & psg_by_seat <= 0.50){los <- 'A'}
if (psg_by_seat > 0.50 & psg_by_seat <= 1.00){los <- 'B'}
if (psg_by_seat > 1.00 & psg_by_seat <= 1.30){los <- 'C'}
if (psg_by_seat >= 1.30 & psg_by_seat <= 1.60){los <- 'D'}
if (psg_by_seat >= 1.60 & psg_by_seat <= 2.00){los <- 'E'}
if (psg_by_seat > 2.00){los <- 'F'}
}
else{
if (area_psg > 1.70){los <- 'A'}
if (area_psg > 0.84 & area_psg <= 1.70){los <- 'B'}
if (area_psg > 0.65 & area_psg <= 0.84){los <- 'C'}
if (area_psg > 0.52 & area_psg <= 0.65){los <- 'D'}
if (area_psg > 0.43 & area_psg <= 0.52){los <- 'E'}
if (area_psg <= 0.43){los <- 'F'}
}
}
}
if (type == 'circular'){
if (is.null(n_psg) == FALSE){
if (n_psg >= 0 & n_psg <= 12){los <- 'A'}
if (n_psg > 12 & n_psg <= 24){los <- 'B'}
if (n_psg > 24 & n_psg <= 31){los <- 'C'}
if (n_psg > 31 & n_psg <= 38){los <- 'D'}
if (n_psg > 38 & n_psg <= 48){los <- 'E'}
if (n_psg > 48){los <- 'F'}
}
else{
if (is.null(psg_by_seat) == FALSE){
if (psg_by_seat >= 0 & psg_by_seat <= 0.50){los <- 'A'}
if (psg_by_seat > 0.50 & psg_by_seat <= 1.00){los <- 'B'}
if (psg_by_seat > 1.00 & psg_by_seat <= 1.30){los <- 'C'}
if (psg_by_seat >= 1.30 & psg_by_seat <= 1.60){los <- 'D'}
if (psg_by_seat >= 1.60 & psg_by_seat <= 2.00){los <- 'E'}
if (psg_by_seat > 2.00){los <- 'F'}
}
else{
if (area_psg > 1.33){los <- 'A'}
if (area_psg > 0.66 & area_psg <= 1.33){los <- 'B'}
if (area_psg > 0.52 & area_psg <= 0.66){los <- 'C'}
if (area_psg > 0.41 & area_psg <= 0.52){los <- 'D'}
if (area_psg > 0.33 & area_psg <= 0.41){los <- 'E'}
if (area_psg <= 0.33){los <- 'F'}
}
}
}
los
}
LOS_bus_standing('city', 30)
LOS_bus_standing(type = 'circular', psg_by_seat = 1.334)
LOS_bus_standing(type = 'city', area_psg = 2.31)
#' Service level by region according to bus service interval(LOS_bus_interval)
#'
#' It follows <Table 13-5> in KHCM(2013), p.595.
#' @param city Choose one from: \code{'large'}, \code{'small'}
#' @param bus_interval bus operation interval(minutes)
#' @export LOS_bus_interval \code{'A'}, \code{'B'}, \code{'C'}, \code{'D'}, \code{'E'}, \code{'F'}
#' @examples
LOS_bus_interval <- function(city = NULL, bus_interval = NULL){
if (city == 'large'){
if (bus_interval > 0 & bus_interval <= 3){los <- 'A'}
if (bus_interval > 3 & bus_interval <= 6){los <- 'B'}
if (bus_interval > 6 & bus_interval <= 10){los <- 'C'}
if (bus_interval > 10 & bus_interval <= 15){los <- 'D'}
if (bus_interval > 15 & bus_interval <= 25){los <- 'E'}
if (bus_interval > 25){los <- 'F'}
}
if (city == 'small'){
if (bus_interval > 0 & bus_interval <= 10){los <- 'A'}
if (bus_interval > 10 & bus_interval <= 20){los <- 'B'}
if (bus_interval > 20 & bus_interval <= 40){los <- 'C'}
if (bus_interval > 40 & bus_interval <= 60){los <- 'D'}
if (bus_interval > 60 & bus_interval <= 100){los <- 'E'}
if (bus_interval > 100){los <- 'F'}
}
los
}
LOS_bus_interval('large', 23)
LOS_bus_interval('small', 92)
#' Service level according to bus operation time(LOS_bus_time)
#'
#' It follows <Table 13-6> in KHCM(2013), p.595.
#' @param t operation time per day
#' @export LOS_bus_time \code{'A'}, \code{'B'}, \code{'C'}, \code{'D'}, \code{'E'}, \code{'F'}
#' @examples
#' LOS_bus_interval('large', 23)
#' LOS_bus_interval('small', 92)
LOS_bus_time <- function(t = NULL){
if (t > 20 & t <= 24){los <- 'A'}
if (t > 18 & t <= 20){los <- 'B'}
if (t > 16 & t <= 18){los <- 'C'}
if (t > 14 & t <= 16){los <- 'D'}
if (t > 13 & t <= 14){los <- 'E'}
if (t <= 13){los <- 'F'}
los
}
LOS_bus_time(19)
#' bus stop time. Based on door opening time and passenger boarding and disembarking time(t_D, seconds)
#'
#' It follows <Table 13-7> in KHCM(2013), p.597.
#' @param type Bus type. Choose one from: \code{'city'}, \code{'seat'}
#' @param standing_psg Choose one from: \code{'yes'}, \code{'no'}
#' @param pay Choose one from: \code{'card'}, \code{'cash_change'}, \code{'cash_no_change'}
#' @export t_D bus stop time
#' @examples
t_D <- function(type = NULL, standing_psg = NULL, pay = NULL){
t_drop_off <- 1.5
if (type = 'city'){t_door_opening <- 3.0}
if (type = 'seat'){t_door_opening <- 3.2}
if (standing_psg = 'no'){
if (pay == 'card'){t_ride <- 3.2}
if (pay == 'cash_no_change'){t_ride <- 3.0}
if (pay == 'cash_change'){t_ride <- 5.0}
}
if (standing_psg= 'yes'){
if (pay == 'card'){t_ride <- 4.2}
if (pay == 'cash_no_change'){t_ride <- 4.0}
if (pay == 'cash_change'){t_ride <- 5.0}
}
t_door_opening + t_ride + t_drop_off
}
#' bus stop time. Based on door opening time and passenger boarding and disembarking time(t_D, seconds)
#'
#' It follows <Table 13-7> in KHCM(2013), p.597.
#' @param type Bus type. Choose one from: \code{'city'}, \code{'seat'}
#' @param standing_psg Choose one from: \code{'yes'}, \code{'no'}
#' @param pay Choose one from: \code{'card'}, \code{'cash_change'}, \code{'cash_no_change'}
#' @export t_D bus stop time
#' @examples
t_D <- function(type = NULL, standing_psg = NULL, pay = NULL){
t_drop_off <- 1.5
if (type == 'city'){t_door_opening <- 3.0}
if (type == 'seat'){t_door_opening <- 3.2}
if (standing_psg == 'no'){
if (pay == 'card'){t_ride <- 3.2}
if (pay == 'cash_no_change'){t_ride <- 3.0}
if (pay == 'cash_change'){t_ride <- 5.0}
}
if (standing_psg == 'yes'){
if (pay == 'card'){t_ride <- 4.2}
if (pay == 'cash_no_change'){t_ride <- 4.0}
if (pay == 'cash_change'){t_ride <- 5.0}
}
t_door_opening + t_ride + t_drop_off
}
t_D(type = 'city', standing_psg = 'yes', pay = 'card')
t_D('seat', 'no', pay = 'cash_no_change')
#' Number of Bus Stop Stopping area(n_bus_stopping_area)
#'
#' It follows KHCM(2013), p.597
#' @param l Length of bus stop(m)
#' @param
#' @export n_bus_stopping_area
#' @examples
n_bus_stopping_area <- function(l = NULL){
floor(l/12)
}
n_bus_stopping_area(12)
n_bus_stopping_area(11.999)
n_bus_stopping_area(25)
#' Maximum number of buses per hour per bus stopping area (c_b, vph)
#'
#' It follows <Formula 13-1> KHCM(2013), p.598
#' @param R Parking surface capacity correction factor. See R()
#' @param t_c Erasing time (sec)
#' @param t_D Stop time (seconds) (= door opening/closing time + passenger boarding and disembarking time)
#' @export c_b
#' @examples
c_b <- function(R = NULL, t_c = NULL, t_D = NULL){
3600 * R / (t_c + t_D)
}
#' Maximum number of buses per hour per bus stopping area (c_b, vph)
#'
#' It follows <Formula 13-1>, <Formula 13-2> KHCM(2013), p.598, p.599
#' @param flow_type Choose one from: \code{'continuous'}, \code{'interrupted'}
#' @param R Parking surface capacity correction factor. See R()
#' @param t_c Erasing time (sec)
#' @param t_D Stop time (seconds) (= door opening/closing time + passenger boarding and disembarking time)
#' @param g_c_ratio
#' @export c_b
#' @examples
c_b <- function(flow_type = NULL, R = NULL, t_c = NULL, t_D = NULL, g_c_ratio = NULL){
if (flow_type == 'continuous'){c <- 3600 * R / (t_c + t_D)}
if (flow_type == 'interrupted'){c <- g_c_ratio * 3600 * R / (t_c + g_c_ratio * t_D)}
c
}
}
}
}
}
if (t_R == 1){r <- 0.682}
}
if (t_R == 1){r <- 0.682}
}
}
}
}
}
}
r
}
}
}
#' Traffic Volume Converted to Peak Hour(Vp)
#'
#' This function calculates traffic volume converted to peak hour(vph) by using PHF(peak hour factor).
#' @param V *Numeric* Current or future traffic volume. It must be positive.
#' @param PHF *Numeric* Peak Hour Factor(PHF). It is a value between 0 and 1.
#' @param f_hv *Numeric* Heavy Vehicle Factors(f_hv)
#' @export Vp \code{V/PHF}(vph)
#' @examples
#' Vp(1000, 0.97)
#' Vp(V = 1300, PHF = 0.93)
Vp <- function(V = NULL, PHF = NULL, f_hv = 1){
if (V >=0 & PHF >=0 & PHF <=1 & f_hv >= 0){
V/(PHF*f_hv)
}
}
}
}
}
#' Correction of saturated traffic flow rate due to road occupation construction near intersections(S_i_WZ)
#'
#' It follows <Formula 8-67> in KHCM(2013)
#' @param S_i_WZ
#' @param g_i Effective green time of lane group i(s)
#' @param C
#' @export c_i_WZ Capacity of car group i
#' @examples
c_i_WZ <- function(S_i_WZ = NULL, g_i = NULL, C = NULL){
S_i_WZ * g_i / C
}
}
#' Compensation factor for calculating the stopping surface capacity according to the bus waiting ratio (r_coefficient)
#'
#' It follows <Table 13-9> KHCM(2013), p.599
#' @param t_R Bus waiting rate(%)
#' @export r_coefficient
#' @examples
c_i_WZ <- function(S_i_WZ = NULL, g_i = NULL, C = NULL){
S_i_WZ * g_i / C
}
#' Compensation factor for calculating the stopping surface capacity according to the bus waiting ratio (r_coefficient)
#'
#' It follows <Table 13-9> KHCM(2013), p.599
#' @param t_R Bus waiting rate(%)
#' @export r_coefficient
#' @examples
r_coefficient <- function(t_R = NULL){
if (t_R == 1){r <- 0.682}
if (t_R > 1 & t_R < 2.5){r <- 0.682 + (0.718 - 0.682)/(2.5 - 1) * (t_R - 1)}
if (t_R == 2.5){r <- 0.718}
if (t_R > 2.5 & t_R < 5){r <- 0.718 + (0.752 - 0.718)/(5 - 2.5) * (t_R - 2.5)}
if (t_R == 5){r <- 0.752}
if (t_R > 5 & t_R < 7.5){r <- 0.752 + (0.776 - 0.752)/(7.5 - 5) * (t_R - 5)}
if (t_R == 7.5){r <- 0.776}
if (t_R > 7.5 & t_R < 10){r <- 0.776 + (0.81 - 0.776)/(10 - 7.5) * (t_R - 7.5)}
if (t_R == 10){r <- 0.81}
if (t_R > 10 & t_R < 15){r <- 0.81 + (0.84 - 0.81)/(15 - 10) * (t_R - 10)}
if (t_R == 15){r <- 0.84}
if (t_R > 15 & t_R < 20){r <- 0.84 + (0.87 - 0.84)/(20 - 15) * (t_R - 15)}
if (t_R == 20){r <- 0.87}
if (t_R > 20 & t_R < 25){r <- 0.87 + (0.89 - 0.87)/(25 - 20) * (t_R - 20)}
if (t_R == 25){r <- 0.89}
if (t_R > 25 & t_R < 30){r <- 0.89 + (0.91 - 0.89)/(30 - 25) * (t_R - 25)}
if (t_R == 30){r <- 0.91}
if (t_R > 30 & t_R < 50){r <- 0.91 + (0.95 - 0.91)/(50 - 30) * (t_R - 30)}
if (t_R == 50){r <- 0.95}
r
}
r_coefficient(13.29)
#' Utilization efficiency coefficient according to the stopping surface(N)
#'
#' It follows <Table 13-9> KHCM(2013), p.599
#' @param l length of the bus stop(m)
#' @export N_bus_using_efficiency
#' @examples
N_bus_using_efficiency <- function(l = NULL){
if (l > 0 & l < 24){f <- 1.00}
if (l >= 24 & l < 36){f <- 1.75}
if (l >= 36 & l < 48){f <- 2.25}
if (l >= 48 & l < 60){f <- 2.55}
if (l >= 60){f <- 2.65}
f
}
N_bus_using_efficiency(43.22)
# man 폴더에 document 일괄생성
document()
library(devtools)
library(roxygen2)
# man 폴더에 document 일괄생성
document()
# man 폴더에 document 일괄생성
document()
# 작업 디렉토리 변경: 프로젝트
setwd('D:/projects/KHCMinR')
# man 폴더에 document 일괄생성
document()
# man 폴더에 document 일괄생성
document()
# 작업 디렉토리 변경: 프로젝트
setwd('D:/projects/KHCMinR')
# man 폴더에 document 일괄생성
document()
warnings()
# man 폴더에 document 일괄생성
document()
# man 폴더에 document 일괄생성
document()
# man 폴더에 document 일괄생성
document()
warnings()
# man 폴더에 document 일괄생성
document()
#load
devtools::load_all()
# man 폴더에 document 일괄생성
document()
warnings()
warnings()
library(devtools)
library(roxygen2)
# 작업 디렉토리 변경: 프로젝트
setwd('D:/projects/KHCMinR')
# man 폴더에 document 일괄생성
document()
# man 폴더에 document 일괄생성
document()
# man 폴더에 document 일괄생성
document()
# man 폴더에 document 일괄생성
document()
