if (output == 'max'){k <- 0.19}
else{'Error : The output value must be one of "mean", "min", "max".'}
}
else{'Error : The lane value must be more than 4'}
}
else{'Error : The road value must be one of "general" or "expressway".'}
}
else{'Error : The region value must be one of "urban", "local", or "tourist_area".'}
k
}
K(region = 'urban', road = 'general', lane = 2, output = 'mean')
#'
#' @param region *Categorical* Region type classification. Choose one from : \code{'urban'}, \code{'local'}, \code{'tourist_area'}
#' @param road *Categorical* Road type. Choose one from : \code{'general'}(General national road), \code{'expressway'}(Expressway with more than 4 lanes)
#' @param lane *Numeric* The number of round-trip lanes.. It should \code{2} or \code{4} or more.
#' @param output *Categorical* Type of result value. \code{'max'}, \code{'min'}, \code{'mean'}
#' @keywords Design Hourly Factor K
#' @export K
#' @examples
#' K(region = 'urban', road = 'general', lane = 5, output = 'mean')
#' K('local', 'expressway', 4, 'max')
K <- function(region = NULL, road = NULL, lane = NULL, output = NULL){
if(region == 'urban'){
if(road == 'general'){
if(lane == 2){
if (output == 'mean'){k <- 0.12}
else if (output == 'min'){k <- 0.10}
else if (output == 'max'){k <- 0.14}
else{k <- 'Error : The output value must be one of "mean", "min", "max".'}
}
else if(lane >= 4){
if (output == 'mean'){k <- 0.10}
else if (output == 'min'){k <- 0.07}
else if (output == 'max'){k <- 0.12}
else{k <- 'Error : The output value must be one of "mean", "min", "max".'}
}
else(k <- 'Error : The "Lane" value must be 2 or more than 4.')
}
else if(road == 'expressway'){
if (lane >= 4){
if (output == 'mean'){k <- 0.10}
else if (output == 'min'){k <- 0.07}
else if (output == 'max'){k <- 0.13}
else{k <- 'Error : The output value must be one of "mean", "min", "max".'}
}
else{k <- 'Error : The lane value must be more than 4'}
}
else{k <- 'Error : The road value must be one of "general" or "expressway".'}
}
else if(region == 'local'){
if(road == 'general'){
if(lane == 2){
if (output == 'mean'){k <- 0.16}
else if (output == 'min'){k <- 0.13}
else if (output == 'max'){k <- 0.20}
else{k <- 'Error : The output value must be one of "mean", "min", "max".'}
}
if(lane >= 4){
if (output == 'mean'){k <- 0.12}
else if (output == 'min'){k <- 0.09}
else if (output == 'max'){k <- 0.15}
else{k <- 'Error : The output value must be one of "mean", "min", "max".'}
}
else{k <- 'Error : The lane value must be 2 or more than 4.'}
}
if(road == 'expressway'){
if (lane >= 4){
if (output == 'mean'){k <- 0.14}
else if (output == 'min'){k <- 0.09}
else if (output == 'max'){k <- 0.19}
else{k <- 'Error : The lane value must be more than 4'}
}
else{k <- 'Error : The lane value must be more than 4'}
}
else{k <- 'Error : The road value must be one of "general" or "expressway".'}
}
else if(region == 'tourist_area'){
if(road == 'general'){
if(lane == 2){
if (output == 'mean'){k <- 0.23}
else if (output == 'min'){k <- 0.18}
else if (output == 'max'){k <- 0.28}
else{'Error : The output value must be one of "mean", "min", "max".'}
}
else if(lane >= 4){
if (output == 'mean'){k <- 0.14}
else if (output == 'min'){k <- 0.12}
else if (output == 'max'){k <- 0.17}
else{'Error : The output value must be one of "mean", "min", "max".'}
}
else{'Error : The lane value must be 2 or more than 4.'}
}
if(road == 'expressway'){
if (lane >= 4){
if (output == 'mean'){k <- 0.14}
else if (output == 'min'){k <- 0.09}
else if (output == 'max'){k <- 0.19}
else{'Error : The output value must be one of "mean", "min", "max".'}
}
else{'Error : The lane value must be more than 4'}
}
else{'Error : The road value must be one of "general" or "expressway".'}
}
else{k <- 'Error : The region value must be one of "urban", "local", or "tourist_area".'}
k
}
K(region = 'urban', road = 'general', lane = 2, output = 'mean')
K('local', 'expressway', 4, 'max')
K('tata')
K('urban', 'kk')
#' @param region *Categorical* Region type classification. Choose one from : \code{'urban'}, \code{'local'}, \code{'tourist_area'}
#' @param road *Categorical* Road type. Choose one from : \code{'general'}(General national road), \code{'expressway'}(Expressway with more than 4 lanes)
#' @param lane *Numeric* The number of round-trip lanes.. It should \code{2} or \code{4} or more.
#' @param output *Categorical* Type of result value. \code{'max'}, \code{'min'}, \code{'mean'}
#' @keywords DHV AADT Design Hour Factor
#' @export DHV \code{AADT * K}
#' @examples
#' DHV(AADT = 2000, region = 'tourist_area', road = 'highway', lane = 8)
#' DHV(AADT = 1500, region = 'city', road = 'general', lane = 2)
#' DHV(3000, 'city', 'general', 8)
DHV <- function(AADT = NULL, region = NULL, road = NULL, lane = NULL, output = NULL){
k <- K(region = region, road = road, lane = lane, output = output)
if (is.numeric(k) == TRUE){
dhv <- AADT * K
}
else{
dhv <- 'Error : Please check the argument to get K.'
}
dhv
}
DHV(AADT = 2000, region = 'tourist_area', road = 'highway', lane = 8)
DHV(AADT = 2000, region = 'tourist_area', road = 'expressway', lane = 8)
DHV(AADT = 2000, region = 'tourist_area', road = 'expressway', lane = 8, output = 'max')
#' @param region *Categorical* Region type classification. Choose one from : \code{'urban'}, \code{'local'}, \code{'tourist_area'}
#' @param road *Categorical* Road type. Choose one from : \code{'general'}(General national road), \code{'expressway'}(Expressway with more than 4 lanes)
#' @param lane *Numeric* The number of round-trip lanes.. It should \code{2} or \code{4} or more.
#' @param output *Categorical* Type of result value. \code{'max'}, \code{'min'}, \code{'mean'}
#' @keywords DHV AADT Design Hour Factor
#' @export DHV \code{AADT * K}
#' @examples
#' DHV(AADT = 2000, region = 'tourist_area', road = 'highway', lane = 8)
#' DHV(AADT = 1500, region = 'city', road = 'general', lane = 2)
#' DHV(3000, 'city', 'general', 8)
DHV <- function(AADT = NULL, region = NULL, road = NULL, lane = NULL, output = NULL){
k <- K(region = region, road = road, lane = lane, output = output)
if (is.numeric(k) == TRUE){
if (is.numeric(AADT) == TRUE){
dhv <- AADT * K
}
else{dhv <- 'Error : AADT is not numeric type. Please check AADT.'}
}
else{
dhv <- 'Error : Please check the argument to get K.'
}
dhv
}
DHV(AADT = 2000, region = 'tourist_area', road = 'expressway', lane = 8, output = 'max')
DHV(AADT = 2000, region = 'urban', road = 'expressway', lane = 8, output = 'max')
source('D:/projects/KHCMinR/R/DHV.R', echo=TRUE)
#' @param region *Categorical* Region type classification. Choose one from : \code{'urban'}, \code{'local'}, \code{'tourist_area'}
#' @param road *Categorical* Road type. Choose one from : \code{'general'}(General national road), \code{'expressway'}(Expressway with more than 4 lanes)
#' @param lane *Numeric* The number of round-trip lanes.. It should \code{2} or \code{4} or more.
#' @param output *Categorical* Type of result value. \code{'max'}, \code{'min'}, \code{'mean'}
#' @keywords DHV AADT Design Hour Factor
#' @export DHV \code{AADT * K}
#' @examples
#' DHV(AADT = 2000, region = 'tourist_area', road = 'highway', lane = 8)
#' DHV(AADT = 1500, region = 'city', road = 'general', lane = 2)
#' DHV(3000, 'city', 'general', 8)
DHV <- function(AADT = NULL, region = NULL, road = NULL, lane = NULL, output = NULL){
k <- K(region = region, road = road, lane = lane, output = output)
print(k)
if (is.numeric(k) == TRUE){
if (is.numeric(AADT) == TRUE){
dhv <- AADT * K
}
else{dhv <- 'Error : AADT is not numeric type. Please check AADT.'}
}
else{
dhv <- 'Error : Please check the argument to get K.'
}
dhv
}
DHV(AADT = 2000, region = 'urban', road = 'expressway', lane = 8, output = 'max')
#' @param region *Categorical* Region type classification. Choose one from : \code{'urban'}, \code{'local'}, \code{'tourist_area'}
#' @param road *Categorical* Road type. Choose one from : \code{'general'}(General national road), \code{'expressway'}(Expressway with more than 4 lanes)
#' @param lane *Numeric* The number of round-trip lanes.. It should \code{2} or \code{4} or more.
#' @param output *Categorical* Type of result value. \code{'max'}, \code{'min'}, \code{'mean'}
#' @keywords DHV AADT Design Hour Factor
#' @export DHV \code{AADT * K}
#' @examples
#' DHV(AADT = 2000, region = 'tourist_area', road = 'highway', lane = 8)
#' DHV(AADT = 1500, region = 'city', road = 'general', lane = 2)
#' DHV(3000, 'city', 'general', 8)
DHV <- function(AADT = NULL, region = NULL, road = NULL, lane = NULL, output = NULL){
k <- K(region = region, road = road, lane = lane, output = output)
if (is.numeric(k) == TRUE){
if (is.numeric(AADT) == TRUE){
dhv <- AADT * k
}
else{dhv <- 'Error : AADT is not numeric type. Please check AADT.'}
}
else{
dhv <- 'Error : Please check the argument to get K.'
}
dhv
}
DHV(AADT = 2000, region = 'urban', road = 'expressway', lane = 8, output = 'max')
DHV(3000, 'urban', 'general', 6, 'mean')
df <- data.frame(region = c('urban', 'urban', 'local', 'tourist_area', 'tada'),
road = c('general', 'expressway', 'general', 'nana', 'nana'),
lane = c(4, 5, 6, 6, 6, 6),
output = c('mean', 'nana', 'max', 'min', 'mean'))
df <- data.frame(region = c('urban', 'urban', 'local', 'tourist_area', 'nana'),
road = c('general', 'expressway', 'general', 'nana', 'nana'),
lane = c(4, 5, 6, 6, 6),
output = c('mean', 'nana', 'max', 'min', 'mean'))
df$k <- K(df$region, df$road, df$lane, df$output)
K <- function(region = NULL, road = NULL, lane = NULL, output = NULL){
for (x in 1:length(region)){
if(region[x] == 'urban'){
if(road[x] == 'general'){
if(lane[x] == 2){
if (output[x] == 'mean'){k <- 0.12}
else if (output[x] == 'min'){k <- 0.10}
else if (output[x] == 'max'){k <- 0.14}
else{k <- 'Error : The output value must be one of "mean", "min", "max".'}
}
else if(lane[x] >= 4){
if (output[x] == 'mean'){k <- 0.10}
else if (output[x] == 'min'){k <- 0.07}
else if (output[x] == 'max'){k <- 0.12}
else{k <- 'Error : The output value must be one of "mean", "min", "max".'}
}
else(k <- 'Error : The "Lane" value must be 2 or more than 4.')
}
else if(road[x] == 'expressway'){
if (lane[x] >= 4){
if (output[x] == 'mean'){k <- 0.10}
else if (output[x] == 'min'){k <- 0.07}
else if (output[x] == 'max'){k <- 0.13}
else{k <- 'Error : The output value must be one of "mean", "min", "max".'}
}
else{k <- 'Error : The lane value must be more than 4'}
}
else{k <- 'Error : The road value must be one of "general" or "expressway".'}
}
else if(region[x] == 'local'){
if(road[x] == 'general'){
if(lane[x] == 2){
if (output[x] == 'mean'){k <- 0.16}
else if (output[x] == 'min'){k <- 0.13}
else if (output[x] == 'max'){k <- 0.20}
else{k <- 'Error : The output value must be one of "mean", "min", "max".'}
}
if(lane[x] >= 4){
if (output[x] == 'mean'){k <- 0.12}
else if (output[x] == 'min'){k <- 0.09}
else if (output[x] == 'max'){k <- 0.15}
else{k <- 'Error : The output value must be one of "mean", "min", "max".'}
}
else{k <- 'Error : The lane value must be 2 or more than 4.'}
}
if(road[x] == 'expressway'){
if (lane[x] >= 4){
if (output[x] == 'mean'){k <- 0.14}
else if (output[x] == 'min'){k <- 0.09}
else if (output[x] == 'max'){k <- 0.19}
else{k <- 'Error : The lane value must be more than 4'}
}
else{k <- 'Error : The lane value must be more than 4'}
}
else{k <- 'Error : The road value must be one of "general" or "expressway".'}
}
else if(region[x] == 'tourist_area'){
if(road[x] == 'general'){
if(lane[x] == 2){
if (output[x] == 'mean'){k <- 0.23}
else if (output[x] == 'min'){k <- 0.18}
else if (output[x] == 'max'){k <- 0.28}
else{'Error : The output value must be one of "mean", "min", "max".'}
}
else if(lane[x] >= 4){
if (output[x] == 'mean'){k <- 0.14}
else if (output[x] == 'min'){k <- 0.12}
else if (output[x] == 'max'){k <- 0.17}
else{'Error : The output value must be one of "mean", "min", "max".'}
}
else{'Error : The lane value must be 2 or more than 4.'}
}
if(road[x] == 'expressway'){
if (lane[x] >= 4){
if (output[x] == 'mean'){k <- 0.14}
else if (output[x] == 'min'){k <- 0.09}
else if (output[x] == 'max'){k <- 0.19}
else{'Error : The output value must be one of "mean", "min", "max".'}
}
else{'Error : The lane value must be more than 4'}
}
else{'Error : The road value must be one of "general" or "expressway".'}
}
else{k <- 'Error : The region value must be one of "urban", "local", or "tourist_area".'}
k
}
}
df$k <- K(df$region, df$road, df$lane, df$output)
View(df)
View(df)
df <- data.frame(region = c('urban', 'urban', 'local', 'tourist_area', 'nana'),
road = c('general', 'expressway', 'general', 'nana', 'nana'),
lane = c(4, 5, 6, 6, 6),
output = c('mean', 'nana', 'max', 'min', 'mean'))
df$k <- K(df$region, df$road, df$lane, df$output)
View(df)
K(region = 'urban', road = 'general', lane = 2, output = 'mean')
#'
#' @param region *Categorical* Region type classification. Choose one from : \code{'urban'}, \code{'local'}, \code{'tourist_area'}
#' @param road *Categorical* Road type. Choose one from : \code{'general'}(General national road), \code{'expressway'}(Expressway with more than 4 lanes)
#' @param lane *Numeric* The number of round-trip lanes.. It should \code{2} or \code{4} or more.
#' @param output *Categorical* Type of result value. \code{'max'}, \code{'min'}, \code{'mean'}
#' @keywords Design Hourly Factor K
#' @export K
#' @examples
#' K(region = 'urban', road = 'general', lane = 2, output = 'mean')
#' K('local', 'expressway', 4, 'max')
K <- function(region = NULL, road = NULL, lane = NULL, output = NULL){
for (x in 1:length(region)){
if(region[x] == 'urban'){
if(road[x] == 'general'){
if(lane[x] == 2){
if (output[x] == 'mean'){k <- 0.12}
else if (output[x] == 'min'){k <- 0.10}
else if (output[x] == 'max'){k <- 0.14}
else{k <- 'Error : The output value must be one of "mean", "min", "max".'}
}
else if(lane[x] >= 4){
if (output[x] == 'mean'){k <- 0.10}
else if (output[x] == 'min'){k <- 0.07}
else if (output[x] == 'max'){k <- 0.12}
else{k <- 'Error : The output value must be one of "mean", "min", "max".'}
}
else(k <- 'Error : The "Lane" value must be 2 or more than 4.')
}
else if(road[x] == 'expressway'){
if (lane[x] >= 4){
if (output[x] == 'mean'){k <- 0.10}
else if (output[x] == 'min'){k <- 0.07}
else if (output[x] == 'max'){k <- 0.13}
else{k <- 'Error : The output value must be one of "mean", "min", "max".'}
}
else{k <- 'Error : The lane value must be more than 4'}
}
else{k <- 'Error : The road value must be one of "general" or "expressway".'}
}
else if(region[x] == 'local'){
if(road[x] == 'general'){
if(lane[x] == 2){
if (output[x] == 'mean'){k <- 0.16}
else if (output[x] == 'min'){k <- 0.13}
else if (output[x] == 'max'){k <- 0.20}
else{k <- 'Error : The output value must be one of "mean", "min", "max".'}
}
if(lane[x] >= 4){
if (output[x] == 'mean'){k <- 0.12}
else if (output[x] == 'min'){k <- 0.09}
else if (output[x] == 'max'){k <- 0.15}
else{k <- 'Error : The output value must be one of "mean", "min", "max".'}
}
else{k <- 'Error : The lane value must be 2 or more than 4.'}
}
if(road[x] == 'expressway'){
if (lane[x] >= 4){
if (output[x] == 'mean'){k <- 0.14}
else if (output[x] == 'min'){k <- 0.09}
else if (output[x] == 'max'){k <- 0.19}
else{k <- 'Error : The lane value must be more than 4'}
}
else{k <- 'Error : The lane value must be more than 4'}
}
else{k <- 'Error : The road value must be one of "general" or "expressway".'}
}
else if(region[x] == 'tourist_area'){
if(road[x] == 'general'){
if(lane[x] == 2){
if (output[x] == 'mean'){k <- 0.23}
else if (output[x] == 'min'){k <- 0.18}
else if (output[x] == 'max'){k <- 0.28}
else{'Error : The output value must be one of "mean", "min", "max".'}
}
else if(lane[x] >= 4){
if (output[x] == 'mean'){k <- 0.14}
else if (output[x] == 'min'){k <- 0.12}
else if (output[x] == 'max'){k <- 0.17}
else{'Error : The output value must be one of "mean", "min", "max".'}
}
else{'Error : The lane value must be 2 or more than 4.'}
}
if(road[x] == 'expressway'){
if (lane[x] >= 4){
if (output[x] == 'mean'){k <- 0.14}
else if (output[x] == 'min'){k <- 0.09}
else if (output[x] == 'max'){k <- 0.19}
else{'Error : The output value must be one of "mean", "min", "max".'}
}
else{'Error : The lane value must be more than 4'}
}
else{'Error : The road value must be one of "general" or "expressway".'}
}
else{k <- 'Error : The region value must be one of "urban", "local", or "tourist_area".'}
k
}
}
K(region = 'urban', road = 'general', lane = 2, output = 'mean')
K(region = 'urban', road = 'general', lane = 2, output = 'mean')
#'
#' @param region *Categorical* Region type classification. Choose one from : \code{'urban'}, \code{'local'}, \code{'tourist_area'}
#' @param road *Categorical* Road type. Choose one from : \code{'general'}(General national road), \code{'expressway'}(Expressway with more than 4 lanes)
#' @param lane *Numeric* The number of round-trip lanes.. It should \code{2} or \code{4} or more.
#' @param output *Categorical* Type of result value. \code{'max'}, \code{'min'}, \code{'mean'}
#' @keywords Design Hourly Factor K
#' @export K
#' @examples
#' K(region = 'urban', road = 'general', lane = 2, output = 'mean')
#' K('local', 'expressway', 4, 'max')
K <- function(region = NULL, road = NULL, lane = NULL, output = NULL){
for (x in 1:length(region)){
if(region[x] == 'urban'){
if(road[x] == 'general'){
if(lane[x] == 2){
if (output[x] == 'mean'){k <- 0.12}
else if (output[x] == 'min'){k <- 0.10}
else if (output[x] == 'max'){k <- 0.14}
else{k <- 'Error : The output value must be one of "mean", "min", "max".'}
}
else if(lane[x] >= 4){
if (output[x] == 'mean'){k <- 0.10}
else if (output[x] == 'min'){k <- 0.07}
else if (output[x] == 'max'){k <- 0.12}
else{k <- 'Error : The output value must be one of "mean", "min", "max".'}
}
else(k <- 'Error : The "Lane" value must be 2 or more than 4.')
}
else if(road[x] == 'expressway'){
if (lane[x] >= 4){
if (output[x] == 'mean'){k <- 0.10}
else if (output[x] == 'min'){k <- 0.07}
else if (output[x] == 'max'){k <- 0.13}
else{k <- 'Error : The output value must be one of "mean", "min", "max".'}
}
else{k <- 'Error : The lane value must be more than 4'}
}
else{k <- 'Error : The road value must be one of "general" or "expressway".'}
}
else if(region[x] == 'local'){
if(road[x] == 'general'){
if(lane[x] == 2){
if (output[x] == 'mean'){k <- 0.16}
else if (output[x] == 'min'){k <- 0.13}
else if (output[x] == 'max'){k <- 0.20}
else{k <- 'Error : The output value must be one of "mean", "min", "max".'}
}
if(lane[x] >= 4){
if (output[x] == 'mean'){k <- 0.12}
else if (output[x] == 'min'){k <- 0.09}
else if (output[x] == 'max'){k <- 0.15}
else{k <- 'Error : The output value must be one of "mean", "min", "max".'}
}
else{k <- 'Error : The lane value must be 2 or more than 4.'}
}
if(road[x] == 'expressway'){
if (lane[x] >= 4){
if (output[x] == 'mean'){k <- 0.14}
else if (output[x] == 'min'){k <- 0.09}
else if (output[x] == 'max'){k <- 0.19}
else{k <- 'Error : The lane value must be more than 4'}
}
else{k <- 'Error : The lane value must be more than 4'}
}
else{k <- 'Error : The road value must be one of "general" or "expressway".'}
}
else if(region[x] == 'tourist_area'){
if(road[x] == 'general'){
if(lane[x] == 2){
if (output[x] == 'mean'){k <- 0.23}
else if (output[x] == 'min'){k <- 0.18}
else if (output[x] == 'max'){k <- 0.28}
else{'Error : The output value must be one of "mean", "min", "max".'}
}
else if(lane[x] >= 4){
if (output[x] == 'mean'){k <- 0.14}
else if (output[x] == 'min'){k <- 0.12}
else if (output[x] == 'max'){k <- 0.17}
else{'Error : The output value must be one of "mean", "min", "max".'}
}
else{'Error : The lane value must be 2 or more than 4.'}
}
if(road[x] == 'expressway'){
if (lane[x] >= 4){
if (output[x] == 'mean'){k <- 0.14}
else if (output[x] == 'min'){k <- 0.09}
else if (output[x] == 'max'){k <- 0.19}
else{'Error : The output value must be one of "mean", "min", "max".'}
}
else{'Error : The lane value must be more than 4'}
}
else{'Error : The road value must be one of "general" or "expressway".'}
}
else{k <- 'Error : The region value must be one of "urban", "local", or "tourist_area".'}
k[x] <- k
}
}
K(region = 'urban', road = 'general', lane = 2, output = 'mean')
