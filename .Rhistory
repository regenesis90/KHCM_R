else if (turn == 'right'){
if (v_c_ratio <= 0.8){
if (arv_form == 'form1'){f <- 1.50}
else if (arv_form == 'form2'){f <- 1.22}
else if (arv_form == 'form3'){f <- 1.00}
else if (arv_form == 'form4'){f <- 0.82}
else if (arv_form == 'form5'){f <- 0.53}
else {f <- 'Error : [arv_form] must be one of [form1], [form2], [form3], [form4], [form5]. Please check that.'}
}
else {f <- 'Error : [v_c_ratio] must be <= 0.8. Please check that.'}
}
else if (turn == 'simultaneous_left'){
if (v_c_ratio <= 1.0){
if (arv_form == 'form1'){f <- 1.40}
else if (arv_form == 'form2'){f <- 1.18}
else if (arv_form == 'form3'){f <- 1.00}
else if (arv_form == 'form4'){f <- 0.90}
else if (arv_form == 'form5'){f <- 0.65}
else {f <- 'Error : [arv_form] must be one of [form1], [form2], [form3], [form4], [form5]. Please check that.'}
}
else {f <- 'Error : [v_c_ratio] must be <= 1.0. Please check that.'}
}
else if (turn == 'dedicated_left'){f <- 1.0}
else {f <- 'Error : [turn] must be one of [straight], [right], [simultaneous_left], [dedicated_left]. Please check that.'}
}
if (direction == 'sub'){
if (turn == 'straight'){
if (v_c_ratio <= 0.6){
if (arv_form == 'form1'){f <- 1.48}
else if (arv_form == 'form2'){f <- 1.18}
else if (arv_form == 'form3'){f <- 1.00}
else if (arv_form == 'form4'){f <- 0.86}
else if (arv_form == 'form5'){f <- 0.70}
else {f <- 'Error : [arv_form] must be one of [form1], [form2], [form3], [form4], [form5]. Please check that.'}
}
else {f <- 'Error : [v_c_ratio] must be <= 0.6. Please check that.'}
}
else if (turn == 'right'){
if (v_c_ratio <= 0.8){
if (arv_form == 1){f <- 1.20}
else if (arv_form == 2){f <- 1.07}
else if (arv_form == 3){f <- 1.00}
else if (arv_form == 4){f <- 0.98}
else if (arv_form == 5){f <- 0.89}
else {f <- 'Error : [arv_form] must be one of [form1], [form2], [form3], [form4], [form5]. Please check that.'}
}
else {f <- 'Error : [v_c_ratio] must be <= 0.8. Please check that.'}
}
else if (turn == 'simultaneous_left'){
if (v_c_ratio <= 1.0){
if (arv_form == 'form1'){f <- 1.12}
else if (arv_form == 'form2'){f <- 1.04}
else if (arv_form == 'form3'){f <- 1.00}
else if (arv_form == 'form4'){f <- 1.00}
else if (arv_form == 'form5'){f <- 1.00}
else {f <- 'Error : [arv_form] must be one of [form1], [form2], [form3], [form4], [form5]. Please check that.'}
}
else {f <- 'Error : [v_c_ratio] must be <= 1.0. Please check that.'}
}
else if (turn == 'dedicated_left'){f <- 1.0}
else {f <- 'Error : [turn] must be one of [straight], [right], [simultaneous_left], [dedicated_left]. Please check that.'}
}
}
else {f <- 'Error : [type] must be one of [response], [semi-response]. Please check that.'}
f
}
#'     In case the interlocking effect disappears because the distance between the interlocking intersections is too far,
#'     or the red and green signals arrive scattered throughout. average condition
#'     - form4: When a dense vehicle group arrives in the middle of the green signal,
#'     or when a group of vehicles dispersed throughout the green signal arrives.
#'     Overall good vehicle condition
#'     - form5: When a dense vehicle group arrives when the green signal starts.
#'     Best vehicle condition
#' @export PF_rsp_artl
#' @examples
#' PF_rsp_artl('semi-response', 'main', 'right', 3, 0.23)
PF_rsp_artl <- function(sg_type = NULL, direction = NULL, turn = NULL, arv_form = NULL, v_c_ratio = NULL){
if (sg_type == 'response'){
if (turn == 'straight'){
if (v_c_ratio <= 0.6){
if (arv_form == 'form1'){f <- 1.54}
else if (arv_form == 'form2'){f <- 1.08}
else if (arv_form == 'form3'){f <- 0.85}
else if (arv_form == 'form4'){f <- 0.62}
else if (arv_form == 'form5'){f <- 0.40}
else {f <- 'Error : [arv_form] must be one of [form1], [form2], [form3], [form4], [form5]. Please check that.'}
}
else {f <- 'Error : [v_c_ratio] must be <= 0.6. Please check that.'}
}
else if (turn == 'right'){
if (v_c_ratio <= 0.8){
if (arv_form == 'form1'){f <- 1.25}
else if (arv_form == 'form2'){f <- 0.98}
else if (arv_form == 'form3'){f <- 0.85}
else if (arv_form == 'form4'){f <- 0.71}
else if (arv_form == 'form5'){f <- 0.50}
else {f <- 'Error : [arv_form] must be one of [form1], [form2], [form3], [form4], [form5]. Please check that.'}
}
else {f <- 'Error : [v_c_ratio] must be <= 0.8. Please check that.'}
}
else if (turn == 'simultaneous_left'){
if (v_c_ratio <= 1.0){
if (arv_form == 'form1'){f <- 1.16}
else if (arv_form == 'form2'){f <- 0.94}
else if (arv_form == 'form3'){f <- 0.85}
else if (arv_form == 'form4'){f <- 0.78}
else if (arv_form == 'form5'){f <- 0.61}
else {f <- 'Error : [arv_form] must be one of [form1], [form2], [form3], [form4], [form5]. Please check that.'}
}
else {f <- 'Error : [v_c_ratio] must be <= 1.0. Please check that.'}
}
else if (turn == 'dedicated_left'){f <- 1.0}
else {f <- 'Error : [turn] must be one of [straight], [right], [simultaneous_left], [dedicated_left]. Please check that.'}
}
else if (sg_type == 'semi-response'){
if (road == 'main'){
if (turn == 'straight'){
if (v_c_ratio <= 0.6){
if (arv_form == 'form1'){f <- 1.85}
else if (arv_form == 'form2'){f <- 1.35}
else if (arv_form == 'form3'){f <- 1.00}
else if (arv_form == 'form4'){f <- 0.72}
else if (arv_form == 'form5'){f <- 0.42}
else {f <- 'Error : [arv_form] must be one of [form1], [form2], [form3], [form4], [form5]. Please check that.'}
}
else {f <- 'Error : [v_c_ratio] must be <= 0.6. Please check that.'}
}
else if (turn == 'right'){
if (v_c_ratio <= 0.8){
if (arv_form == 'form1'){f <- 1.50}
else if (arv_form == 'form2'){f <- 1.22}
else if (arv_form == 'form3'){f <- 1.00}
else if (arv_form == 'form4'){f <- 0.82}
else if (arv_form == 'form5'){f <- 0.53}
else {f <- 'Error : [arv_form] must be one of [form1], [form2], [form3], [form4], [form5]. Please check that.'}
}
else {f <- 'Error : [v_c_ratio] must be <= 0.8. Please check that.'}
}
else if (turn == 'simultaneous_left'){
if (v_c_ratio <= 1.0){
if (arv_form == 'form1'){f <- 1.40}
else if (arv_form == 'form2'){f <- 1.18}
else if (arv_form == 'form3'){f <- 1.00}
else if (arv_form == 'form4'){f <- 0.90}
else if (arv_form == 'form5'){f <- 0.65}
else {f <- 'Error : [arv_form] must be one of [form1], [form2], [form3], [form4], [form5]. Please check that.'}
}
else {f <- 'Error : [v_c_ratio] must be <= 1.0. Please check that.'}
}
else if (turn == 'dedicated_left'){f <- 1.0}
else {f <- 'Error : [turn] must be one of [straight], [right], [simultaneous_left], [dedicated_left]. Please check that.'}
}
if (road == 'sub'){
if (turn == 'straight'){
if (v_c_ratio <= 0.6){
if (arv_form == 'form1'){f <- 1.48}
else if (arv_form == 'form2'){f <- 1.18}
else if (arv_form == 'form3'){f <- 1.00}
else if (arv_form == 'form4'){f <- 0.86}
else if (arv_form == 'form5'){f <- 0.70}
else {f <- 'Error : [arv_form] must be one of [form1], [form2], [form3], [form4], [form5]. Please check that.'}
}
else {f <- 'Error : [v_c_ratio] must be <= 0.6. Please check that.'}
}
else if (turn == 'right'){
if (v_c_ratio <= 0.8){
if (arv_form == 1){f <- 1.20}
else if (arv_form == 2){f <- 1.07}
else if (arv_form == 3){f <- 1.00}
else if (arv_form == 4){f <- 0.98}
else if (arv_form == 5){f <- 0.89}
else {f <- 'Error : [arv_form] must be one of [form1], [form2], [form3], [form4], [form5]. Please check that.'}
}
else {f <- 'Error : [v_c_ratio] must be <= 0.8. Please check that.'}
}
else if (turn == 'simultaneous_left'){
if (v_c_ratio <= 1.0){
if (arv_form == 'form1'){f <- 1.12}
else if (arv_form == 'form2'){f <- 1.04}
else if (arv_form == 'form3'){f <- 1.00}
else if (arv_form == 'form4'){f <- 1.00}
else if (arv_form == 'form5'){f <- 1.00}
else {f <- 'Error : [arv_form] must be one of [form1], [form2], [form3], [form4], [form5]. Please check that.'}
}
else {f <- 'Error : [v_c_ratio] must be <= 1.0. Please check that.'}
}
else if (turn == 'dedicated_left'){f <- 1.0}
else {f <- 'Error : [turn] must be one of [straight], [right], [simultaneous_left], [dedicated_left]. Please check that.'}
}
}
else {f <- 'Error : [type] must be one of [response], [semi-response]. Please check that.'}
f
}
PF_rsp_artl(sg_type = 'response', road = 'main', turn = 'right', v_c_ratio = 0.5, arv_form = 'type3')
#'     In case the interlocking effect disappears because the distance between the interlocking intersections is too far,
#'     or the red and green signals arrive scattered throughout. average condition
#'     - form4: When a dense vehicle group arrives in the middle of the green signal,
#'     or when a group of vehicles dispersed throughout the green signal arrives.
#'     Overall good vehicle condition
#'     - form5: When a dense vehicle group arrives when the green signal starts.
#'     Best vehicle condition
#' @export PF_rsp_artl
#' @examples
#' PF_rsp_artl('semi-response', 'main', 'right', 3, 0.23)
PF_rsp_artl <- function(sg_type = NULL, road = NULL, turn = NULL, arv_form = NULL, v_c_ratio = NULL){
if (sg_type == 'response'){
if (turn == 'straight'){
if (v_c_ratio <= 0.6){
if (arv_form == 'form1'){f <- 1.54}
else if (arv_form == 'form2'){f <- 1.08}
else if (arv_form == 'form3'){f <- 0.85}
else if (arv_form == 'form4'){f <- 0.62}
else if (arv_form == 'form5'){f <- 0.40}
else {f <- 'Error : [arv_form] must be one of [form1], [form2], [form3], [form4], [form5]. Please check that.'}
}
else {f <- 'Error : [v_c_ratio] must be <= 0.6. Please check that.'}
}
else if (turn == 'right'){
if (v_c_ratio <= 0.8){
if (arv_form == 'form1'){f <- 1.25}
else if (arv_form == 'form2'){f <- 0.98}
else if (arv_form == 'form3'){f <- 0.85}
else if (arv_form == 'form4'){f <- 0.71}
else if (arv_form == 'form5'){f <- 0.50}
else {f <- 'Error : [arv_form] must be one of [form1], [form2], [form3], [form4], [form5]. Please check that.'}
}
else {f <- 'Error : [v_c_ratio] must be <= 0.8. Please check that.'}
}
else if (turn == 'simultaneous_left'){
if (v_c_ratio <= 1.0){
if (arv_form == 'form1'){f <- 1.16}
else if (arv_form == 'form2'){f <- 0.94}
else if (arv_form == 'form3'){f <- 0.85}
else if (arv_form == 'form4'){f <- 0.78}
else if (arv_form == 'form5'){f <- 0.61}
else {f <- 'Error : [arv_form] must be one of [form1], [form2], [form3], [form4], [form5]. Please check that.'}
}
else {f <- 'Error : [v_c_ratio] must be <= 1.0. Please check that.'}
}
else if (turn == 'dedicated_left'){f <- 1.0}
else {f <- 'Error : [turn] must be one of [straight], [right], [simultaneous_left], [dedicated_left]. Please check that.'}
}
else if (sg_type == 'semi-response'){
if (road == 'main'){
if (turn == 'straight'){
if (v_c_ratio <= 0.6){
if (arv_form == 'form1'){f <- 1.85}
else if (arv_form == 'form2'){f <- 1.35}
else if (arv_form == 'form3'){f <- 1.00}
else if (arv_form == 'form4'){f <- 0.72}
else if (arv_form == 'form5'){f <- 0.42}
else {f <- 'Error : [arv_form] must be one of [form1], [form2], [form3], [form4], [form5]. Please check that.'}
}
else {f <- 'Error : [v_c_ratio] must be <= 0.6. Please check that.'}
}
else if (turn == 'right'){
if (v_c_ratio <= 0.8){
if (arv_form == 'form1'){f <- 1.50}
else if (arv_form == 'form2'){f <- 1.22}
else if (arv_form == 'form3'){f <- 1.00}
else if (arv_form == 'form4'){f <- 0.82}
else if (arv_form == 'form5'){f <- 0.53}
else {f <- 'Error : [arv_form] must be one of [form1], [form2], [form3], [form4], [form5]. Please check that.'}
}
else {f <- 'Error : [v_c_ratio] must be <= 0.8. Please check that.'}
}
else if (turn == 'simultaneous_left'){
if (v_c_ratio <= 1.0){
if (arv_form == 'form1'){f <- 1.40}
else if (arv_form == 'form2'){f <- 1.18}
else if (arv_form == 'form3'){f <- 1.00}
else if (arv_form == 'form4'){f <- 0.90}
else if (arv_form == 'form5'){f <- 0.65}
else {f <- 'Error : [arv_form] must be one of [form1], [form2], [form3], [form4], [form5]. Please check that.'}
}
else {f <- 'Error : [v_c_ratio] must be <= 1.0. Please check that.'}
}
else if (turn == 'dedicated_left'){f <- 1.0}
else {f <- 'Error : [turn] must be one of [straight], [right], [simultaneous_left], [dedicated_left]. Please check that.'}
}
if (road == 'sub'){
if (turn == 'straight'){
if (v_c_ratio <= 0.6){
if (arv_form == 'form1'){f <- 1.48}
else if (arv_form == 'form2'){f <- 1.18}
else if (arv_form == 'form3'){f <- 1.00}
else if (arv_form == 'form4'){f <- 0.86}
else if (arv_form == 'form5'){f <- 0.70}
else {f <- 'Error : [arv_form] must be one of [form1], [form2], [form3], [form4], [form5]. Please check that.'}
}
else {f <- 'Error : [v_c_ratio] must be <= 0.6. Please check that.'}
}
else if (turn == 'right'){
if (v_c_ratio <= 0.8){
if (arv_form == 1){f <- 1.20}
else if (arv_form == 2){f <- 1.07}
else if (arv_form == 3){f <- 1.00}
else if (arv_form == 4){f <- 0.98}
else if (arv_form == 5){f <- 0.89}
else {f <- 'Error : [arv_form] must be one of [form1], [form2], [form3], [form4], [form5]. Please check that.'}
}
else {f <- 'Error : [v_c_ratio] must be <= 0.8. Please check that.'}
}
else if (turn == 'simultaneous_left'){
if (v_c_ratio <= 1.0){
if (arv_form == 'form1'){f <- 1.12}
else if (arv_form == 'form2'){f <- 1.04}
else if (arv_form == 'form3'){f <- 1.00}
else if (arv_form == 'form4'){f <- 1.00}
else if (arv_form == 'form5'){f <- 1.00}
else {f <- 'Error : [arv_form] must be one of [form1], [form2], [form3], [form4], [form5]. Please check that.'}
}
else {f <- 'Error : [v_c_ratio] must be <= 1.0. Please check that.'}
}
else if (turn == 'dedicated_left'){f <- 1.0}
else {f <- 'Error : [turn] must be one of [straight], [right], [simultaneous_left], [dedicated_left]. Please check that.'}
}
}
else {f <- 'Error : [type] must be one of [response], [semi-response]. Please check that.'}
f
}
PF_rsp_artl(sg_type = 'response', road = 'main', turn = 'right', v_c_ratio = 0.5, arv_form = 'type3')
PF_rsp_artl(sg_type = 'response', road = 'main', turn = 'right', v_c_ratio = 0.5, arv_form = 'form3')
t_trv_km_bus_artl(L = 0.32, ovrtk_lane = 'yes', bus_stop = 1)
#' @param bus_stop Number of bus stop. \code{0}, \code{1}, \code{2}
#' @keywords section travel time bus arterial road exclusive central bus lane
#' @details
#'     - In this function, only the presence of a stop and an overtaking lane is considered as factors affecting the traveling time.
#'     - Since there were no cases where there were two stops within 500m of the analysis section,
#'     this was not taken into account. (According to the design guidelines for express buses in Korea, the interval between urban bus stops is at least 500m)
#' @seealso
#' @export t_trv_km_bus_artl
#' @examples
#' t_p_km_arterial_central_bus_lane(0.32, 'yes', 1)
t_trv_km_bus_artl <- function(L = NULL, ovrtk_lane = NULL, bus_stop = NULL){
if (ovrtk_lane == 'yes'){
if (bus_stop == 1){
if (L > 0 & L <= 0.1){tpk <- 316}
else if (L > 0.1 & L <= 0.2){tpk <- 198}
else if (L > 0.2 & L <= 0.3){tpk <- 163}
else if (L > 0.3 & L <= 0.4){tpk <- 144}
else if (L > 0.4 & L <= 0.5){tpk <- 133}
else if (L > 0.5 & L <= 0.6){tpk <- 124}
else if (L > 0.6 & L <= 0.7){tpk <- 118}
else if (L > 0.7 & L <= 0.8){tpk <- 113}
else if (L > 0.8 & L <= 0.9){tpk <- 109}
else if (L > 0.9){tpk <- 106}
else {tpk <- 'Error : [L] must be positive(km). Please check that.'}
}
else if (bus_stop == 2){
if (L > 0.5 & L <= 0.6){tpk <- 157}
else if (L > 0.6 & L <= 0.7){tpk <- 150}
else if (L > 0.7 & L <= 0.8){tpk <- 145}
else if (L > 0.8 & L <= 0.9){tpk <- 140}
else if (L > 0.9){tpk <- 136}
else {tpk <- 'Error : [L] must be > 0.5(km). Please check that.'}
}
else {tpk <- 'Error : [bus_stop] must be one of 1, 2. Please check that.'}
}
else if (ovrtk_lane == 'no'){
if (bus_stop == 0){
if (L > 0 & L <= 0.1){tpk <- 91}
else if (L > 0.1 & L <= 0.2){tpk <- 78}
else if (L > 0.2 & L <= 0.3){tpk <- 73}
else if (L > 0.3 & L <= 0.4){tpk <- 69}
else if (L > 0.4 & L <= 0.5){tpk <- 66}
else if (L > 0.5 & L <= 0.6){tpk <- 64}
else if (L > 0.6 & L <= 0.7){tpk <- 63}
else if (L > 0.7 & L <= 0.8){tpk <- 61}
else if (L > 0.8 & L <= 0.9){tpk <- 60}
else if (L > 0.9){tpk <- 59}
else {tpk <- 'Error : [L] must be positive(km). Please check that.'}
}
else if (bus_stop == 1){
if (L > 0 & L <= 0.1){tpk <- 374}
else if (L > 0.1 & L <= 0.2){tpk <- 223}
else if (L > 0.2 & L <= 0.3){tpk <- 181}
else if (L > 0.3 & L <= 0.4){tpk <- 159}
else if (L > 0.4 & L <= 0.5){tpk <- 146}
else if (L > 0.5 & L <= 0.6){tpk <- 136}
else if (L > 0.6 & L <= 0.7){tpk <- 129}
else if (L > 0.7 & L <= 0.8){tpk <- 124}
else if (L > 0.8 & L <= 0.9){tpk <- 119}
else if (L > 0.9){tpk <- 116}
else {tpk <- 'Error : [L] must be positive(km). Please check that.'}
}
else if (bus_stop == 2){
if (L > 0.5 & L <= 0.6){tpk <- 175}
else if (L > 0.6 & L <= 0.7){tpk <- 168}
else if (L > 0.7 & L <= 0.8){tpk <- 162}
else if (L > 0.8 & L <= 0.9){tpk <- 158}
else if (L > 0.9){tpk <- 154}
else {tpk <- 'Error : [L] must be > 0.5(km). Please check that.'}
}
else {tpk <- 'Error : [bus_stop] must be one of 0, 1, 2. Please check that.'}
}
tpk
}
t_trv_km_bus_artl(L = 0.32, ovrtk_lane = 'yes', bus_stop = 1)
#'     3600 means Conversion factor for converting speed units of m/sec to km/hour
#' @param L Section length(km)
#' @param T_bus Travel time (seconds) of the analysis section of the exclusive central bus lane
#' @param T_others Travel time (seconds) of the general lane analysis section
#' @param V_bus Peak hour traffic volume (veh/hour) in the analysis section of the exclusive central bus lane
#' @param V_others Peak hour traffic volume of general lane analysis section (veh/hour)
#' @keywords Average travel speed ATS exclusive central bus lane
#' @seealso \code{\link{T_trv_artl}}
#' @export ATS_seg_bus_artl
#' @examples
ATS_seg_bus_artl <- function(L = NULL, T_bus = NULL, T_others = NULL, V_bus = NULL, V_others = NULL){
if (L > 0){
if (T_bus > 0 & T_others > 0){
if (V_bus > 0 & V_others > 0){
ats <- 3600 * (V_bus + V_others) * L / (V_bus * T_bus + V_others * T_others)}
else {ats <- 'Error : [V_bus], [V_others] must be positive(seconds). Please check that.'}
}
else {ats <- 'Error : [T_bus], [T_others] must be positive(seconds). Please check that.'}
}
else {ats <- 'Error : [L] must be positive(km). Please check that.'}
ats
}
ATS_seg_bus_artl(L = 1.2, T_bus = 30, T_others = 32, V_bus = 100, V_others = 1000)
ATS_seg_bus_artl(L = 1.2, T_bus = 30, T_others = 102, V_bus = 100, V_others = 1000)
#' Travel Time of Analysis Section on Arterial Road
#'
#' Travel time (seconds) in the analysis section of the exclusive median bus lane or general lane
#'     It follows <Formula 12-12> in KHCM(2013) p.552.
#' @param t_trv_km Travel time per km(sec/km). See \code{\link{t_trv_km_artl}}, \code{\link{t_trv_km_bus_artl}}
#' @param l Length of analysis section (km)
#' @param d Total access delay (seconds) at all intersections within the analysis target range as a part of the general lane
#' @keywords travel time arterial road
#' @export T_trv_artl
#' @examples
T_trv_artl <- function(t_trv_km = NULL, l = NULL, d = NUL){
if (t_trv_km > 0){
if (l > 0){
if (d > 0){t <- t_trv_km * l + d}
else {t <- 'Error : [d] must be positive(seconds). Please check that.'}
}
else {t <- 'Error : [l] must be positive(km). Please check that.'}
}
else {t <- 'Error : [t_trv_km] must be positive(sec/km). Please check that.'}
t
}
#' Travel Time of Analysis Section on Arterial Road
#'
#' Travel time (seconds) in the analysis section of the exclusive median bus lane or general lane
#'     It follows <Formula 12-12> in KHCM(2013) p.552.
#' @param t_trv_km Travel time per km(sec/km). See \code{\link{t_trv_km_artl}}, \code{\link{t_trv_km_bus_artl}}
#' @param l Length of analysis section (km)
#' @param d Total access delay (seconds) at all intersections within the analysis target range as a part of the general lane
#' @keywords travel time arterial road
#' @export T_trv_artl
#' @examples
T_trv_artl <- function(t_trv_km = NULL, l = NULL, d = NULL){
if (t_trv_km > 0){
if (l > 0){
if (d > 0){t <- t_trv_km * l + d}
else {t <- 'Error : [d] must be positive(seconds). Please check that.'}
}
else {t <- 'Error : [l] must be positive(km). Please check that.'}
}
else {t <- 'Error : [t_trv_km] must be positive(sec/km). Please check that.'}
t
}
T_trv_artl(t_trv_km = 136, l = 0.6, d = 54.3)
#'     3600 means Conversion factor for converting speed units of m/sec to km/hour
#' @param L section length(km)
#' @param T_bus Travel time (seconds) of the analysis section of the exclusive central bus lane
#' @param T_others Travel time (seconds) of the general lane analysis section
#' @param V_bus Peak traffic volume (veh/hour) in the analysis section of the exclusive central bus lane
#' @param V_others Peak traffic volume of general lane analysis section (veh/hour)
#' @keywords average travel speed ats arterial road exclusive central bus lane
#' @seealso \code{\link{T_trv_artl}}, \code{\link{ATS_seg_bus_artl}}
#' @export ATS_total_artl
#' @examples
ATS_total_artl <- function(L = NULL, T_bus = NULL, T_others = NULL, V_bus = NULL, V_others = NULL){
if (L > 0){
if (T_bus > 0 & T_others > 0){
if (V_bus > 0 & V_others > 0){
vsum <- 0
vtsum <- 0
for (i in 1:length(V_bus)){
v <- V_bus[i] + V_others[i]
vt <- V_bus[i] * T_bus[i] + V_others[i] * T_others[i]
vsum <- vsum + v
vtsum <- vtsum + vt
}
ats <- 3600 * l * vsum / vtsum
}
else {ats <- 'Error : [V_bus], [V_others] must be positive(veh/hour). Please check that.'}
}
else {ats <- 'Error : [T_bus], [T_others] must be positive(seconds). Please check that.'}
}
else {ats <- 'Error : [L] must be positive(km). Please check that.'}
ats
}
#' Service level standards for arterial roads with exclusive central bus lanes
#'     The standard of arterial road 'type1' is applied.
#'     It follows <Table 12-12> in KHCM(2013), p.554.
#' @param ATS Average travel speed(kph)
#' @keywords level of service LOS arterial road ATS average travel speed
#' @export LOS_bus_artl Level of Service. \code{A}, \code{B}, \code{C}, \code{D}, \code{E}, \code{F}, \code{FF}, \code{FFF}
#' @seealso \code{\link{LOS_artl}}
#' @examples
#' LOS_bus_artl(ATS = 38)
#' LOS_bus_artl(ATS = 59)
LOS_bus_artl <- function(ATS = NULL){
los <- LOS_artl(type = 'type1', ATS = ATS)
los
}
LOS_bus_artl(ATS = 39.2)
