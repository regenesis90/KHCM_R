else if (output[x] == 'min'){k <- 0.10}
else if (output[x] == 'max'){k <- 0.14}
else{k <- 'Error : The output value must be one of "mean", "min", "max".'}
}
else if(lane[x] >= 4){
if (output[x] == 'mean'){k <- 0.10}
else if (output[x] == 'min'){k <- 0.07}
else if (output[x] == 'max'){k <- 0.12}
else{k <- 'Error : The output value must be one of "mean", "min", "max".'}
}
else(k <- 'Error : The "Lane" value must be 2 or more than 4.')
}
else if(road[x] == 'expressway'){
if (lane[x] >= 4){
if (output[x] == 'mean'){k <- 0.10}
else if (output[x] == 'min'){k <- 0.07}
else if (output[x] == 'max'){k <- 0.13}
else{k <- 'Error : The output value must be one of "mean", "min", "max".'}
}
else{k <- 'Error : The lane value must be more than 4'}
}
else{k <- 'Error : The road value must be one of "general" or "expressway".'}
}
else if(region[x] == 'local'){
if(road[x] == 'general'){
if(lane[x] == 2){
if (output[x] == 'mean'){k <- 0.16}
else if (output[x] == 'min'){k <- 0.13}
else if (output[x] == 'max'){k <- 0.20}
else{k <- 'Error : The output value must be one of "mean", "min", "max".'}
}
if(lane[x] >= 4){
if (output[x] == 'mean'){k <- 0.12}
else if (output[x] == 'min'){k <- 0.09}
else if (output[x] == 'max'){k <- 0.15}
else{k <- 'Error : The output value must be one of "mean", "min", "max".'}
}
else{k <- 'Error : The lane value must be 2 or more than 4.'}
}
if(road[x] == 'expressway'){
if (lane[x] >= 4){
if (output[x] == 'mean'){k <- 0.14}
else if (output[x] == 'min'){k <- 0.09}
else if (output[x] == 'max'){k <- 0.19}
else{k <- 'Error : The lane value must be more than 4'}
}
else{k <- 'Error : The lane value must be more than 4'}
}
else{k <- 'Error : The road value must be one of "general" or "expressway".'}
}
else if(region[x] == 'tourist_area'){
if(road[x] == 'general'){
if(lane[x] == 2){
if (output[x] == 'mean'){k <- 0.23}
else if (output[x] == 'min'){k <- 0.18}
else if (output[x] == 'max'){k <- 0.28}
else{'Error : The output value must be one of "mean", "min", "max".'}
}
else if(lane[x] >= 4){
if (output[x] == 'mean'){k <- 0.14}
else if (output[x] == 'min'){k <- 0.12}
else if (output[x] == 'max'){k <- 0.17}
else{'Error : The output value must be one of "mean", "min", "max".'}
}
else{'Error : The lane value must be 2 or more than 4.'}
}
if(road[x] == 'expressway'){
if (lane[x] >= 4){
if (output[x] == 'mean'){k <- 0.14}
else if (output[x] == 'min'){k <- 0.09}
else if (output[x] == 'max'){k <- 0.19}
else{'Error : The output value must be one of "mean", "min", "max".'}
}
else{'Error : The lane value must be more than 4'}
}
else{'Error : The road value must be one of "general" or "expressway".'}
}
else{k <- 'Error : The region value must be one of "urban", "local", or "tourist_area".'}
k
}
}
K(region = 'urban', road = 'general', lane = 2, output = 'mean')
K(region = 'urban', road = 'general', lane = 2, output = 'mean')
#'
#' @param region *Categorical* Region type classification. Choose one from : \code{'urban'}, \code{'local'}, \code{'tourist_area'}
#' @param road *Categorical* Road type. Choose one from : \code{'general'}(General national road), \code{'expressway'}(Expressway with more than 4 lanes)
#' @param lane *Numeric* The number of round-trip lanes.. It should \code{2} or \code{4} or more.
#' @param output *Categorical* Type of result value. \code{'max'}, \code{'min'}, \code{'mean'}
#' @keywords Design Hourly Factor K
#' @export K
#' @examples
#' K(region = 'urban', road = 'general', lane = 2, output = 'mean')
#' K('local', 'expressway', 4, 'max')
K <- function(region = NULL, road = NULL, lane = NULL, output = NULL){
for (x in 1:length(region)){
if(region[x] == 'urban'){
if(road[x] == 'general'){
if(lane[x] == 2){
if (output[x] == 'mean'){k <- 0.12}
else if (output[x] == 'min'){k <- 0.10}
else if (output[x] == 'max'){k <- 0.14}
else{k <- 'Error : The output value must be one of "mean", "min", "max".'}
}
else if(lane[x] >= 4){
if (output[x] == 'mean'){k <- 0.10}
else if (output[x] == 'min'){k <- 0.07}
else if (output[x] == 'max'){k <- 0.12}
else{k <- 'Error : The output value must be one of "mean", "min", "max".'}
}
else(k <- 'Error : The "Lane" value must be 2 or more than 4.')
}
else if(road[x] == 'expressway'){
if (lane[x] >= 4){
if (output[x] == 'mean'){k <- 0.10}
else if (output[x] == 'min'){k <- 0.07}
else if (output[x] == 'max'){k <- 0.13}
else{k <- 'Error : The output value must be one of "mean", "min", "max".'}
}
else{k <- 'Error : The lane value must be more than 4'}
}
else{k <- 'Error : The road value must be one of "general" or "expressway".'}
}
else if(region[x] == 'local'){
if(road[x] == 'general'){
if(lane[x] == 2){
if (output[x] == 'mean'){k <- 0.16}
else if (output[x] == 'min'){k <- 0.13}
else if (output[x] == 'max'){k <- 0.20}
else{k <- 'Error : The output value must be one of "mean", "min", "max".'}
}
if(lane[x] >= 4){
if (output[x] == 'mean'){k <- 0.12}
else if (output[x] == 'min'){k <- 0.09}
else if (output[x] == 'max'){k <- 0.15}
else{k <- 'Error : The output value must be one of "mean", "min", "max".'}
}
else{k <- 'Error : The lane value must be 2 or more than 4.'}
}
if(road[x] == 'expressway'){
if (lane[x] >= 4){
if (output[x] == 'mean'){k <- 0.14}
else if (output[x] == 'min'){k <- 0.09}
else if (output[x] == 'max'){k <- 0.19}
else{k <- 'Error : The lane value must be more than 4'}
}
else{k <- 'Error : The lane value must be more than 4'}
}
else{k <- 'Error : The road value must be one of "general" or "expressway".'}
}
else if(region[x] == 'tourist_area'){
if(road[x] == 'general'){
if(lane[x] == 2){
if (output[x] == 'mean'){k <- 0.23}
else if (output[x] == 'min'){k <- 0.18}
else if (output[x] == 'max'){k <- 0.28}
else{'Error : The output value must be one of "mean", "min", "max".'}
}
else if(lane[x] >= 4){
if (output[x] == 'mean'){k <- 0.14}
else if (output[x] == 'min'){k <- 0.12}
else if (output[x] == 'max'){k <- 0.17}
else{'Error : The output value must be one of "mean", "min", "max".'}
}
else{'Error : The lane value must be 2 or more than 4.'}
}
if(road[x] == 'expressway'){
if (lane[x] >= 4){
if (output[x] == 'mean'){k <- 0.14}
else if (output[x] == 'min'){k <- 0.09}
else if (output[x] == 'max'){k <- 0.19}
else{'Error : The output value must be one of "mean", "min", "max".'}
}
else{'Error : The lane value must be more than 4'}
}
else{'Error : The road value must be one of "general" or "expressway".'}
}
else{k <- 'Error : The region value must be one of "urban", "local", or "tourist_area".'}
k[x] <- k
}
}
K(region = 'urban', road = 'general', lane = 2, output = 'mean')
#'     D is necessary because there are cases where the distribution of traffic volume by direction is clearly different, such as during peak hours.
#'     If a road is designed without considering the direction with high traffic volume (medium direction), there is a risk of constant traffic congestion in the direction with high traffic volume (medium direction). should reflect
#'     In general, the value of urban roads is closer to 0.5 than that of rural roads. This is because there is a lot of traffic for various purposes other than commuting traffic. The peak time used for design or operation analysis shows a fluctuation range of 0.55 to 0.70.
#'     D is derived according to the project by using regular traffic volume survey data for road sections with similar traffic demand fluctuation characteristics around the design target road. However, if you cannot go through this process, you can use this function.
#'     It follows <Table 1-4> in KHCM(2013), p.7
#' @param region *Categorical* Region type classification. Choose one from : \code{'urban'}, \code{'local'}
#' @param output *Categorical* Type of result value. \code{'max'}, \code{'min'}, \code{'mean'}
#' @keywords Directional Distribution Factor
#' @export D_coe Directional Distribution Factor
#' @examples
D_coe <- function(region = NULL, output = NULL){
if (region == 'urban'){
if (output == 'mean'){D <- 0.60}
else if (output == 'min'){D <- 0.55}
else if (output == 'max'){D <- 0.65}
else{D <- 'Error : The "output" value must be one of "mean", "min", "max".'}
}
else if (region == 'local'){
if (output == 'mean'){D <- 0.65}
else if (output == 'min'){D <- 0.60}
else if (output == 'max'){D <- 0.70}
else{D <- 'Error : The "output" value must be one of "mean", "min", "max".'}
}
else{D <- 'Error : The "region" value must be one of "urban" or "local".'}
D
}
D_coe(region = 'urban', output = 'mean')
D_coe('local', 'max')
D_coe('nana', 'sara')
D_coe('urban', 'sara')
#'     It follows a formula in KHCM(2013), p.7
#' @param AADT *Numeric* Average Annual Daily Traffic(pc/day, vph)
#' @param region *Categorical* Region type classification. Choose one from : \code{'urban'}, \code{'local'}, \code{'tourist_area'}
#' @param road *Categorical* Road type. Choose one from : \code{'general'}(General national road), \code{'expressway'}(Expressway with more than 4 lanes)
#' @param lane *Numeric* The number of round-trip lanes.. It should \code{2} or \code{4} or more.
#' @param output_d *Categorical* Type of D_coe() result value. \code{'max'}, \code{'min'}, \code{'mean'}
#' @param output_k *Categorical* Type of K() result value. \code{'max'}, \code{'min'}, \code{'mean'}
#' @keywords DDHV DHV AADT Directional Design Hourly Factor
#' @export DDHV \code{AADT * K * D}. It means Directional Design Hourly Volume(DDHV, veh/h/direction)
#' @examples
DDHV <- function(AADT = NULL, region = NULL, road = NULL, lane = NULL, output_d = NULL, output_k = NULL){
k <- K(region = region, road = road, lane = lane, output = output_k)
if (is.numeric(k) == TRUE){
if (is.numeric(AADT) == TRUE){
dhv <- AADT * k
d <- D_coe(region = region, output = output_d)
if (is.numeric(d) == TRUE){
result <- dhv * d
}
else{result <- 'Error : D_coe is not numeric type. Please check the arguments.'}
}
else{result <- 'Error : AADT is not numeric type. Please check AADT.'}
}
else{result <- 'Error : Please check the argument to get K.'}
result
}
DDHV(AADT = 1200, region = 'urban', road = 'expressway', lane = 6, output_d = 'mean', output_k = 'mean')
#'
#' @param region *Categorical* Region type classification. Choose one from : \code{'urban'}, \code{'local'}, \code{'tourist_area'}
#' @param road *Categorical* Road type. Choose one from : \code{'general'}(General national road), \code{'expressway'}(Expressway with more than 4 lanes)
#' @param lane *Numeric* The number of round-trip lanes.. It should \code{2} or \code{4} or more.
#' @param output *Categorical* Type of result value. \code{'max'}, \code{'min'}, \code{'mean'}
#' @keywords Design Hourly Factor K
#' @export K
#' @examples
#' K(region = 'urban', road = 'general', lane = 2, output = 'mean')
#' K('local', 'expressway', 4, 'max')
K <- function(region = NULL, road = NULL, lane = NULL, output = NULL){
if(region == 'urban'){
if(road == 'general'){
if(lane == 2){
if (output == 'mean'){k <- 0.12}
else if (output == 'min'){k <- 0.10}
else if (output == 'max'){k <- 0.14}
else{k <- 'Error : The output value must be one of "mean", "min", "max".'}
}
else if(lane >= 4){
if (output == 'mean'){k <- 0.10}
else if (output == 'min'){k <- 0.07}
else if (output == 'max'){k <- 0.12}
else{k <- 'Error : The output value must be one of "mean", "min", "max".'}
}
else(k <- 'Error : The "Lane" value must be 2 or more than 4.')
}
else if(road == 'expressway'){
if (lane >= 4){
if (output == 'mean'){k <- 0.10}
else if (output == 'min'){k <- 0.07}
else if (output == 'max'){k <- 0.13}
else{k <- 'Error : The output value must be one of "mean", "min", "max".'}
}
else{k <- 'Error : The lane value must be more than 4'}
}
else{k <- 'Error : The road value must be one of "general" or "expressway".'}
}
else if(region == 'local'){
if(road == 'general'){
if(lane == 2){
if (output == 'mean'){k <- 0.16}
else if (output == 'min'){k <- 0.13}
else if (output == 'max'){k <- 0.20}
else{k <- 'Error : The output value must be one of "mean", "min", "max".'}
}
if(lane >= 4){
if (output == 'mean'){k <- 0.12}
else if (output == 'min'){k <- 0.09}
else if (output == 'max'){k <- 0.15}
else{k <- 'Error : The output value must be one of "mean", "min", "max".'}
}
else{k <- 'Error : The lane value must be 2 or more than 4.'}
}
if(road == 'expressway'){
if (lane >= 4){
if (output == 'mean'){k <- 0.14}
else if (output == 'min'){k <- 0.09}
else if (output == 'max'){k <- 0.19}
else{k <- 'Error : The lane value must be more than 4'}
}
else{k <- 'Error : The lane value must be more than 4'}
}
else{k <- 'Error : The road value must be one of "general" or "expressway".'}
}
else if(region == 'tourist_area'){
if(road == 'general'){
if(lane == 2){
if (output == 'mean'){k <- 0.23}
else if (output == 'min'){k <- 0.18}
else if (output == 'max'){k <- 0.28}
else{'Error : The output value must be one of "mean", "min", "max".'}
}
else if(lane >= 4){
if (output == 'mean'){k <- 0.14}
else if (output == 'min'){k <- 0.12}
else if (output == 'max'){k <- 0.17}
else{'Error : The output value must be one of "mean", "min", "max".'}
}
else{'Error : The lane value must be 2 or more than 4.'}
}
if(road == 'expressway'){
if (lane >= 4){
if (output == 'mean'){k <- 0.14}
else if (output == 'min'){k <- 0.09}
else if (output == 'max'){k <- 0.19}
else{'Error : The output value must be one of "mean", "min", "max".'}
}
else{'Error : The lane value must be more than 4'}
}
else{'Error : The road value must be one of "general" or "expressway".'}
}
else{k <- 'Error : The region value must be one of "urban", "local", or "tourist_area".'}
k
}
#' @param AADT *Numeric* Average Annual Daily Traffic(pc/day, vph)
#' @param region *Categorical* Region type classification. Choose one from : \code{'urban'}, \code{'local'}, \code{'tourist_area'}
#' @param road *Categorical* Road type. Choose one from : \code{'general'}(General national road), \code{'expressway'}(Expressway with more than 4 lanes)
#' @param lane *Numeric* The number of round-trip lanes.. It should \code{2} or \code{4} or more.
#' @param output *Categorical* Type of result value. \code{'max'}, \code{'min'}, \code{'mean'}
#' @keywords DHV AADT Design Hour Factor
#' @export DHV \code{AADT * K}. It means Design Hourly Volume(DHV, veh/h/bidirectional)
#' @examples
#' DHV(AADT = 2000, region = 'urban', road = 'expressway', lane = 8, output = 'max')
#' DHV(3000, 'urban', 'general', 6, 'mean')
DHV <- function(AADT = NULL, region = NULL, road = NULL, lane = NULL, output = NULL){
k <- K(region = region, road = road, lane = lane, output = output)
if (is.numeric(k) == TRUE){
if (is.numeric(AADT) == TRUE){
dhv <- AADT * k
}
else{dhv <- 'Error : AADT is not numeric type. Please check AADT.'}
}
else{dhv <- 'Error : Please check the argument to get K.'}
dhv
}
DDHV(AADT = 1200, region = 'urban', road = 'expressway', lane = 6, output_d = 'mean', output_k = 'mean')
DDHV(3000, 'local', 'general', 4, 'max', 'min')
DDHV(3000, 'local', 'general', 4, 'mean', 'min')
DDHV(3000, 'local', 'general', 4, 'mean', 'mean')
DDHV(3000, 'local', 'general', 2, 'mean', 'mean')
DDHV <- function(AADT = NULL, region = NULL, road = NULL, lane = NULL, output_d = NULL, output_k = NULL){
k <- K(region = region, road = road, lane = lane, output = output_k)
if (is.numeric(k) == TRUE){
if (is.numeric(AADT) == TRUE){
dhv <- AADT * k
d <- D_coe(region = region, output = output_d)
if (is.numeric(d) == TRUE){
result <- dhv * d
}
else{result <- 'Error : D_coe is not numeric type. Please check the arguments.'}
}
else{result <- 'Error : AADT is not numeric type. Please check AADT.'}
}
else{result <- 'Error : Please check the argument to get K.'}
result
}
DDHV(3000, 'urban', 'general', 2, 'mean', 'mean')
DDHV(3000, 'local', 'general', 2, 'mean', 'mean')
DDHV(3000, 'local', 'general', 4, 'mean', 'mean')
DDHV <- function(AADT = NULL, region = NULL, road = NULL, lane = NULL, output_d = NULL, output_k = NULL){
k <- K(region = region, road = road, lane = lane, output = output_k)
print(k)
if (is.numeric(k) == TRUE){
if (is.numeric(AADT) == TRUE){
dhv <- AADT * k
d <- D_coe(region = region, output = output_d)
if (is.numeric(d) == TRUE){
result <- dhv * d
}
else{result <- 'Error : D_coe is not numeric type. Please check the arguments.'}
}
else{result <- 'Error : AADT is not numeric type. Please check AADT.'}
}
else{result <- 'Error : Please check the argument to get K.'}
result
}
DDHV(3000, 'local', 'general', 4, 'mean', 'mean')
DDHV(3000, 'local', 'expressway', 4, 'mean', 'mean')
DDHV(3000, 'local', 'general', 4, 'mean', 'mean')
#'
#' @param region *Categorical* Region type classification. Choose one from : \code{'urban'}, \code{'local'}, \code{'tourist_area'}
#' @param road *Categorical* Road type. Choose one from : \code{'general'}(General national road), \code{'expressway'}(Expressway with more than 4 lanes)
#' @param lane *Numeric* The number of round-trip lanes.. It should \code{2} or \code{4} or more.
#' @param output *Categorical* Type of result value. \code{'max'}, \code{'min'}, \code{'mean'}
#' @keywords Design Hourly Factor K
#' @export K
#' @examples
#' K(region = 'urban', road = 'general', lane = 2, output = 'mean')
#' K('local', 'expressway', 4, 'max')
K <- function(region = NULL, road = NULL, lane = NULL, output = NULL){
if(region == 'urban'){
if(road == 'general'){
if(lane == 2){
if (output == 'mean'){k <- 0.12}
else if (output == 'min'){k <- 0.10}
else if (output == 'max'){k <- 0.14}
else{k <- 'Error : The output value must be one of "mean", "min", "max".'}
}
else if(lane >= 4){
if (output == 'mean'){k <- 0.10}
else if (output == 'min'){k <- 0.07}
else if (output == 'max'){k <- 0.12}
else{k <- 'Error : The output value must be one of "mean", "min", "max".'}
}
else(k <- 'Error : The "Lane" value must be 2 or more than 4.')
}
else if(road == 'expressway'){
if (lane >= 4){
if (output == 'mean'){k <- 0.10}
else if (output == 'min'){k <- 0.07}
else if (output == 'max'){k <- 0.13}
else{k <- 'Error : The output value must be one of "mean", "min", "max".'}
}
else{k <- 'Error : The lane value must be more than 4'}
}
else{k <- 'Error : The road value must be one of "general" or "expressway".'}
}
else if(region == 'local'){
if(road == 'general'){
if(lane == 2){
if (output == 'mean'){k <- 0.16}
else if (output == 'min'){k <- 0.13}
else if (output == 'max'){k <- 0.20}
else{k <- 'Error : The output value must be one of "mean", "min", "max".'}
}
if(lane >= 4){
if (output == 'mean'){k <- 0.12}
else if (output == 'min'){k <- 0.09}
else if (output == 'max'){k <- 0.15}
else{k <- 'Error : The output value must be one of "mean", "min", "max".'}
}
else{k <- 'Error : The lane value must be 2 or more than 4.'}
}
else if(road == 'expressway'){
if (lane >= 4){
if (output == 'mean'){k <- 0.14}
else if (output == 'min'){k <- 0.09}
else if (output == 'max'){k <- 0.19}
else{k <- 'Error : The lane value must be more than 4'}
}
else{k <- 'Error : The lane value must be more than 4'}
}
else{k <- 'Error : The road value must be one of "general" or "expressway".'}
}
else if(region == 'tourist_area'){
if(road == 'general'){
if(lane == 2){
if (output == 'mean'){k <- 0.23}
else if (output == 'min'){k <- 0.18}
else if (output == 'max'){k <- 0.28}
else{'Error : The output value must be one of "mean", "min", "max".'}
}
else if(lane >= 4){
if (output == 'mean'){k <- 0.14}
else if (output == 'min'){k <- 0.12}
else if (output == 'max'){k <- 0.17}
else{'Error : The output value must be one of "mean", "min", "max".'}
}
else{'Error : The lane value must be 2 or more than 4.'}
}
else if(road == 'expressway'){
if (lane >= 4){
if (output == 'mean'){k <- 0.14}
else if (output == 'min'){k <- 0.09}
else if (output == 'max'){k <- 0.19}
else{'Error : The output value must be one of "mean", "min", "max".'}
}
else{'Error : The lane value must be more than 4'}
}
else{'Error : The road value must be one of "general" or "expressway".'}
}
else{k <- 'Error : The region value must be one of "urban", "local", or "tourist_area".'}
k
}
DDHV <- function(AADT = NULL, region = NULL, road = NULL, lane = NULL, output_d = NULL, output_k = NULL){
k <- K(region = region, road = road, lane = lane, output = output_k)
print(k)
if (is.numeric(k) == TRUE){
if (is.numeric(AADT) == TRUE){
dhv <- AADT * k
d <- D_coe(region = region, output = output_d)
if (is.numeric(d) == TRUE){
result <- dhv * d
}
else{result <- 'Error : D_coe is not numeric type. Please check the arguments.'}
}
else{result <- 'Error : AADT is not numeric type. Please check AADT.'}
}
else{result <- 'Error : Please check the argument to get K.'}
result
}
DDHV(3000, 'local', 'general', 4, 'mean', 'mean')
document()
