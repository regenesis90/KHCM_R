else {los <- 'Error : [prop] must be one of 0.3, 0.4, 0.5, 0.6, 0.7. Please check that.'}
}
}
else {los <- 'Error : [width] must be one of 2, 3. Please check that.'}
}
los
}
LOS_type1_bk(road = 'bidirectional', width = 3, confl = 324)
LOS_type1_bk(road = 'one_way', width = 2, Q = 642)
LOS_type1_bk(road = 'bidirectional', width = 2, prop = 0.5, Q = 102)
#'     It is assumed that the speeds of the bicycles follow a normal distribution, and it is assumed that when the bicycles overtake, they do not affect each other's speeds.
#' @param road Road direction. Choose one from :\code{'one-way'}, \code{'bidirectional'}
#' @param Q_bike_sm Same direction Bicycle traffic flow rate(vph)
#' @param U_bike Average bike speed (kph)
#' @param sd Standard deviation of bicycle speed
#' @param p If \code{road == 'bidirectional'}, \code{p} means proportion of bicycle traffic in the direction of travel in total (bidirectional) bicycle traffic
#' @keywords bicycle-only road conflict number overtaking
#' @seealso \code{\link{F_meet_type1_bk}}, \code{\link{F_total_type1_bk}}
#' @export F_pass_type1_bk Overtake count in bicycle lanes or basic section of the road bicycle path(times/h)
#' @examples
F_pass_type1_bk <- function(road = NULL, Q_bike_sm = NULL, U_bike = NULL, sd = NULL){
if (Q_bike_sm >= 0){
if (road == 'one-way'){
if (is.null(U_bike) == TRUE & is.null(sd) == TRUE){
f <- 0.25 * Q
}
else if (U_bike >= 0 & sd >= 0){
f <- 2 * Q_bike_sm * sd / (U_bike * (pi)**(1/2))
}
else {f <- 'Error : [U_bike], [sd] must be all positive or null. Please check that.'}
}
else if (road == 'bidirectional'){
if (is.null(U_bike) == TRUE & is.null(sd) == TRUE){
if (p >= 0 & p <= 1){f <- Q * (1 - 0.75 * p)}
else {f <- 'Error : [p] must be >= 0 and <= 1. Please check that.'}
}
else if (U_bike >= 0 & sd >= 0){
f <- 2 * Q_bike_sm * sd / (U_bike * (pi)**(1/2))
}
else {f <- 'Error : [U_bike], [sd] must be all positive or null. Please check that.'}
}
else {f <- 'Error : [road] must be one of [one-way] or [bidirectional]. Please check that.'}
}
else {f <- 'Error : [Q_bike_sm] must be positive(vph). Please check that.'}
}
#'     It is assumed that the speeds of the bicycles follow a normal distribution, and it is assumed that when the bicycles overtake, they do not affect each other's speeds.
#' @param road Road direction. Choose one from :\code{'one-way'}, \code{'bidirectional'}
#' @param Q_bike_sm Same direction Bicycle traffic flow rate(vph)
#' @param U_bike Average bike speed (kph)
#' @param sd Standard deviation of bicycle speed
#' @param p If \code{road == 'bidirectional'}, \code{p} means proportion of bicycle traffic in the direction of travel in total (bidirectional) bicycle traffic
#' @keywords bicycle-only road conflict number overtaking
#' @seealso \code{\link{F_meet_type1_bk}}, \code{\link{F_total_type1_bk}}
#' @export F_pass_type1_bk Overtake count in bicycle lanes or basic section of the road bicycle path(times/h)
#' @examples
F_pass_type1_bk <- function(road = NULL, Q_bike_sm = NULL, U_bike = NULL, sd = NULL, p = NULL){
if (Q_bike_sm >= 0){
if (road == 'one-way'){
if (is.null(U_bike) == TRUE & is.null(sd) == TRUE){
f <- 0.25 * Q
}
else if (U_bike >= 0 & sd >= 0){
f <- 2 * Q_bike_sm * sd / (U_bike * (pi)**(1/2))
}
else {f <- 'Error : [U_bike], [sd] must be all positive or null. Please check that.'}
}
else if (road == 'bidirectional'){
if (is.null(U_bike) == TRUE & is.null(sd) == TRUE){
if (p >= 0 & p <= 1){f <- Q * (1 - 0.75 * p)}
else {f <- 'Error : [p] must be >= 0 and <= 1. Please check that.'}
}
else if (U_bike >= 0 & sd >= 0){
f <- 2 * Q_bike_sm * sd / (U_bike * (pi)**(1/2))
}
else {f <- 'Error : [U_bike], [sd] must be all positive or null. Please check that.'}
}
else {f <- 'Error : [road] must be one of [one-way] or [bidirectional]. Please check that.'}
}
else {f <- 'Error : [Q_bike_sm] must be positive(vph). Please check that.'}
}
F_pass_type1_bk(road = 'one-way', Q_bike_sm = 382)
#'     It is assumed that the speeds of the bicycles follow a normal distribution, and it is assumed that when the bicycles overtake, they do not affect each other's speeds.
#' @param road Road direction. Choose one from :\code{'one-way'}, \code{'bidirectional'}
#' @param Q_bike_sm Same direction Bicycle traffic flow rate(vph)
#' @param U_bike Average bike speed (kph)
#' @param sd Standard deviation of bicycle speed
#' @param p If \code{road == 'bidirectional'}, \code{p} means proportion of bicycle traffic in the direction of travel in total (bidirectional) bicycle traffic
#' @keywords bicycle-only road conflict number overtaking
#' @seealso \code{\link{F_meet_type1_bk}}, \code{\link{F_total_type1_bk}}
#' @export F_pass_type1_bk Overtake count in bicycle lanes or basic section of the road bicycle path(times/h)
#' @examples
F_pass_type1_bk <- function(road = NULL, Q_bike_sm = NULL, U_bike = NULL, sd = NULL, p = NULL){
if (Q_bike_sm >= 0){
if (road == 'one-way'){
if (is.null(U_bike) == TRUE & is.null(sd) == TRUE){
f <- 0.25 * Q_bike_sm
}
else if (U_bike >= 0 & sd >= 0){
f <- 2 * Q_bike_sm * sd / (U_bike * (pi)**(1/2))
}
else {f <- 'Error : [U_bike], [sd] must be all positive or null. Please check that.'}
}
else if (road == 'bidirectional'){
if (is.null(U_bike) == TRUE & is.null(sd) == TRUE){
if (p >= 0 & p <= 1){f <- Q_bike_sm * (1 - 0.75 * p)}
else {f <- 'Error : [p] must be >= 0 and <= 1. Please check that.'}
}
else if (U_bike >= 0 & sd >= 0){
f <- 2 * Q_bike_sm * sd / (U_bike * (pi)**(1/2))
}
else {f <- 'Error : [U_bike], [sd] must be all positive or null. Please check that.'}
}
else {f <- 'Error : [road] must be one of [one-way] or [bidirectional]. Please check that.'}
}
else {f <- 'Error : [Q_bike_sm] must be positive(vph). Please check that.'}
}
F_pass_type1_bk(road = 'one-way', Q_bike_sm = 382)
F_pass_type1_bk(road = 'one-way', Q_bike_sm = 382)
#'     It is assumed that the speeds of the bicycles follow a normal distribution, and it is assumed that when the bicycles overtake, they do not affect each other's speeds.
#' @param road Road direction. Choose one from :\code{'one-way'}, \code{'bidirectional'}
#' @param Q_bike_sm Same direction Bicycle traffic flow rate(vph)
#' @param U_bike Average bike speed (kph)
#' @param sd Standard deviation of bicycle speed
#' @param p If \code{road == 'bidirectional'}, \code{p} means proportion of bicycle traffic in the direction of travel in total (bidirectional) bicycle traffic
#' @keywords bicycle-only road conflict number overtaking
#' @seealso \code{\link{F_meet_type1_bk}}, \code{\link{F_total_type1_bk}}
#' @export F_pass_type1_bk Overtake count in bicycle lanes or basic section of the road bicycle path(times/h)
#' @examples
F_pass_type1_bk <- function(road = NULL, Q_bike_sm = NULL, U_bike = NULL, sd = NULL, p = NULL){
if (Q_bike_sm >= 0){
if (road == 'one-way'){
if (is.null(U_bike) == TRUE & is.null(sd) == TRUE){
f <- 0.25 * Q_bike_sm
}
else if (U_bike >= 0 & sd >= 0){
f <- 2 * Q_bike_sm * sd / (U_bike * (pi)**(1/2))
}
else {f <- 'Error : [U_bike], [sd] must be all positive or null. Please check that.'}
}
else if (road == 'bidirectional'){
if (is.null(U_bike) == TRUE & is.null(sd) == TRUE){
if (p >= 0 & p <= 1){f <- Q_bike_sm * (1 - 0.75 * p)}
else {f <- 'Error : [p] must be >= 0 and <= 1. Please check that.'}
}
else if (U_bike >= 0 & sd >= 0){
f <- 2 * Q_bike_sm * sd / (U_bike * (pi)**(1/2))
}
else {f <- 'Error : [U_bike], [sd] must be all positive or null. Please check that.'}
}
else {f <- 'Error : [road] must be one of [one-way] or [bidirectional]. Please check that.'}
}
else {f <- 'Error : [Q_bike_sm] must be positive(vph). Please check that.'}
f
}
F_pass_type1_bk(road = 'one-way', Q_bike_sm = 382)
F_pass_type1_bk(road = 'one-way', Q_bike_sm = 543, U_bike = 12.1, sd = 3.3)
F_pass_type1_bk(road = 'bidirectional', Q_bike_sm = 555, p = 0.43)
F_pass_type1_bk(road = 'bidirectional', Q_bike_sm = 594, U_bike = 9.1, sd = 5.32)
F_pass_type1_bk(road = 'bidirectional', Q_bike_sm = 194, U_bike = 9.1, sd = 5.32)
#'     * It follows <Formula 15-13> in KHCM(2013), p.647.
#' @param Q_bike_sm Same direction Bicycle traffic flow rate(vph)
#' @param U_bike Average bike speed (kph)
#' @param sd Standard deviation of bicycle speed
#' @keywords basic section of city road bicycle path conflict number overtaking
#' @seealso \code{\link{LOS_type3_bk}}
#' @export F_pass_type3_bk Overtake count in bicycle lanes or basic section of the road bicycle path(times/h)
#' @examples
#' F_pass_type3_bk(Q_bike_sm = 382)
#' F_pass_type3_bk(Q_bike_sm = 543, U_bike = 12.1, sd = 3.3)
F_pass_type3_bk <- function(Q_bike_sm = NULL, U_bike = NULL, sd = NULL){
if (Q_bike_sm >= 0){
if (is.null(U_bike) == TRUE & is.null(sd) == TRUE){
f <- 0.25 * Q_bike_sm
}
else if (U_bike >= 0 & sd >= 0){
f <- 2 * Q_bike_sm * sd / (U_bike * (pi)**(1/2))
}
else {f <- 'Error : [U_bike], [sd] must be all positive or null. Please check that.'}
}
else {f <- 'Error : [Q_bike_sm] must be positive(vph). Please check that.'}
f
}
F_pass_type3_bk(Q_bike_sm = 382)
F_pass_type3_bk(Q_bike_sm = 543, U_bike = 12.1, sd = 3.3)
#'
#' The number of encounters per unit time by the amount of bicycle traffic
#'     running in the opposite direction to the driving direction on the bidirectional bicycle road
#'     * The number of face-to-face encounters(times/h)
#'     * If bidirectional bicycle traffic flow has the same speed distribution, the number of encounters per unit time is double the bicycle traffic flow rate in the opposite direction.
#'     * It follows <Formula 15-3>, <15-8> in KHCM(2013), p.644, p.646.
#' @param Q_bike_op Bicycle traffic flow rate in opposite direction (vph)
#' @keywords bicycle encounter number conflict bidirectional bicycle-only lane
#' @export F_meet_type1_bk Number of bicycle encounters in bidirectional bicycle-only lane(times/h)
#' @examples
F_meet_type1_bk <- function(Q_bike_op = NULL){
if (Q_bike_op >= 0){f <- 2 * Q_bike_op}
else {f <- 'Error : [Q_bike_op] must be positive(vph). Please check that.'}
f
}
F_meet_type1_bk(Q_bike_op = 293)
#'
#' Total number of conflicts in bicycle-only road(type1).
#'     * times/h.
#'     * It follows <Formula 15-4> in KHCM(2013), p.644.
#' @param F_pass Number of overtaking bicycles in the direction of travel(times/h). See \code{\link{F_pass_type1_bk}}.
#' @param F_meet Number of bicycles in the opposite direction(times/h). See \code{\link{F_meet_type1_bk}}
#' @keywords
#' @seealso \code{\link{F_pass_type1_bk}}, \code{\link{F_meet_type1_bk}}, \code{\link{LOS_type1_bk}}
#' @export F_total_type1_bk Total number of conflicts in bicycle traffic (times/h)
#' @examples
F_total_type1_bk <- function(F_pass = NULL, F_meet = NULL){
if (F_pass >= 0 & F_meet >= 0){f <- 0.5 * F_meet + F_pass}
else {f <- 'Error : [F_pass], [F_meet] must be >= 0(times/h). Please check that.'}
f
}
F_total_type1_bk(F_pass = 389, F_meet = 653)
#'
#' Number of times a bicycle overtakes a pedestrian walking in the same direction(times/h) in bicyle-pedestrian road(type2).
#'     * It follows <Formula 15-6> in KHCM(2013), p.645.
#' @param Q_ped_sm Pedestrian traffic flow rate in the same direction(person/h)
#' @param U_bike Average bike speed (kph)
#' @param U_ped Average walking speed of pedestrian(kph)
#' @keywords number overtaking bicycle pedestrian bicycle-pedestrian road
#' @seealso \code{\link{F_pass_type1_bb_bk}}, \code{\link{F_pass_type1_pb_bk}}
#' @export F_pass_type2_bp_bk Number of times a bicycle overtakes a pedestrian walking in the same direction (times/h)
#' @examples
F_pass_type2_bp_bk <- function(Q_ped_sm = NULL, U_bike = NULL, U_ped = NULL){
if (Q_ped_sm > 0){
if (U_bike > 0 & U_ped > 0){
f <- Q_ped_sm * (U_bike / U_ped - 1)
}
else {f <- 'Error : [U_bike], [U_ped] must be positive(kph). Please check that.'}
}
else {f <- 'Error : [Q_ped_sm] must be positive(person/h). Please check that.'}
f
}
F_pass_type2_bp_bk(Q_ped_sm = 94, U_bike = 10.32, U_ped = 5.42)
#' Number of times a pedestrian is overtaken by a bicycle traveling in the same direction (times/h) in bicyle-pedestrian road(type2).
#'     * It follows <Formula 15-7> in KHCM(2013), p.645.
#' @param Q_bike_sm Bicycle traffic flow rate in the same direction(vph)
#' @param U_bike Average bike speed (kph)
#' @param U_ped Average walking speed of pedestrian(kph)
#' @keywords number overtaking bicycle pedestrian bicycle-pedestrian road
#' @seealso \code{\link{F_pass_type2_bb_bk}}, \code{\link{F_pass_type2_pb_bk}}
#' @export F_pass_type2_pb_bk Number of times a bicycle overtakes a pedestrian walking in the same direction (times/h)
#' @examples
#' F_pass_type2_pb_bk(Q_bike_sm = 258, U_bike = 10.32, U_ped = 5.42)
F_pass_type2_pb_bk <- function(Q_bike_sm = NULL, U_bike = NULL, U_ped = NULL){
if (Q_bike_sm > 0){
if (U_bike > 0 & U_ped > 0){
f <- Q_bike_sm * (1 - U_ped / U_bike)
}
else {f <- 'Error : [U_bike], [U_ped] must be positive(kph). Please check that.'}
}
else {f <- 'Error : [Q_bike_sm] must be positive(person/h). Please check that.'}
f
}
F_pass_type2_pb_bk(Q_bike_sm = 258, U_bike = 10.32, U_ped = 5.42)
#' Number of Encounters Between Bicycle and Pedestrian Walking in the Opposite Direction in Bicycle-Pedestrian Road
#'
#' Number of encounters between bicycle and pedestrian(walking in opposite direction) in cyclists view.
#'     * It follows <Formula 15-9> in KHCM(2013), p.646.
#' @param Q_ped_op Pedestrian traffic flow rate (person/h) walking in the opposite direction to the bicycle
#' @param U_bike Average bike speed (kph)
#' @param U_ped Average walking speed of pedestrian(kph)
#' @keywords bicycle-pedestrian road number of encounters opposite conflict
#' @export F_meet_type2_bp_bk Number of encounters with pedestrians walking in the opposite direction to the direction of bicycle travel (times/h)
#' @examples
F_meet_type2_bp_bk <- function(Q_ped_op = NULL, U_bike = NULL, U_ped = NULL){
if (Q_ped_op >= 0){
if (U_bike > 0 & U_ped > 0){f <- Q_ped_op * (U_bike / U_ped + 1)}
else {f <- 'Error : [U_bike], [U_ped] must be positive(kph). Please check that.'}
}
else {f <- 'Error : [Q_ped_op] must be positive(person/h). Please check that.'}
f
}
F_meet_type2_bp_bk(Q_ped_op = 122, U_bike = 11.93, U_ped = 4.32)
#'
#' Number of encounters between bicycle and pedestrian(walking in opposite direction) on bicycle-pedestrian road(type2) in pedestrians view.
#'     * It follows <Formula 15-10> in KHCM(2013), p.646.
#' @param Q_bike_op Bicycle traffic flow rate (vph) in the opposite direction to the pedestrian
#' @param U_bike Average bike speed (kph)
#' @param U_ped Average walking speed of pedestrian(kph)
#' @keywords bicycle-pedestrian road number of encounters opposite conflict
#' @export F_meet_type2_pb_bk Number of encounters between bicycle and pdestrian walking in the opposite direction on bicycle-pedestrian road in pedestrian's view(times/h)
#' @examples
#' F_meet_type2_pb_bk(Q_bike_op = 419, U_bike = 11.93, U_ped = 4.32)
F_meet_type2_pb_bk <- function(Q_bike_op = NULL, U_bike = NULL, U_ped = NULL){
if (Q_bike_op >= 0){
if (U_bike > 0 & U_ped > 0){f <- Q_bike_op * (U_bike / U_ped + 1)}
else {f <- 'Error : [U_bike], [U_ped] must be positive(kph). Please check that.'}
}
else {f <- 'Error : [Q_bike_op] must be positive(vph). Please check that.'}
f
}
F_meet_type2_pb_bk(Q_bike_op = 419, U_bike = 11.93, U_ped = 4.32)
#' @param Q_bike_op Bicycle traffic flow rate in opposite direction (vph)
#' @param Q_ped_sm Same direction pedestrian traffic flow rate (vph)
#' @param Q_ped_op Pedestrian traffic flow rate (person/h) walking in the opposite direction to the bicycle
#' @param U_bike Average bike speed (kph)
#' @param U_ped Average walking speed (kph)
#' @param sd Standard deviation of bicycle speed.
#' @keywords bicycle-pedestrian road total number of conflicts cyclist
#' @seealso \code{\link{F_pass_type2_bb_bk}}, \code{\link{F_pass_type2_bp_bk}}, \code{\link{F_meet_type2_bb_bk}}, \code{\link{F_meet_type2_bp_bk}}
#' @export F_total_type2_b_bk Total number of conflicts on the bike-pedestrian road(type2) in cyclists view(times/h)
#' @examples
F_total_type2_b_bk <- function(Q_bike_sm = NULL, Q_bike_op = NULL, Q_ped_sm = NULL, Q_ped_op = NULL, U_bike = NULL, U_ped = NULL, sd = NULL){
if (Q_bike_sm >= 0 & Q_bike_op >= 0){
if (Q_ped_sm >= 0 & Q_ped_op >= 0){
if (is.null(U_bike) == TRUE & is.null(U_ped) == TRUE & is.null(sd) == TRUE){
f <- (Q_bike_sm + Q_bike_op) * (1 - 0.75 * (Q_bike_sm/(Q_bike_sm + Q_bike_op))) + 2 * (Q_ped_sm + Q_ped_op)
}
else {
if (U_bike > 0 & U_ped > 0 & sd > 0){
F_pass_bb <- F_pass_type2_bb_bk(Q_bike_sm = Q_bike_sm, U_bike = U_bike, sd = sd)
F_pass_bp <- F_pass_type2_bp_bk(Q_ped_sm = Q_ped_sm, U_bike = U_bike, U_ped = U_ped)
F_meet_bb <- F_meet_type2_bb_bk(Q_bike_op = Q_bike_op)
F_meet_bp <- F_meet_type2_bp_bk(Q_ped_sm = Q_ped_sm, U_bike = U_bike, U_ped = U_ped)
f <- F_pass_bb + F_pass_bp + 0.5 * (F_meet_bb + F_meet_bp)
}
else {f <- 'Error : [U_bike], [U_ped], [sd] must be positive. Please check that.'}
}
}
else {f <- 'Error : [Q_ped_sm], [Q_ped_op] must be positive(person/h). Please check that.'}
}
else {f <- 'Error : [Q_bike_sm], [Q_bike_op] must be positive(vph). Please check that.'}
f
}
F_total_type2_b_bk(Q_bike_sm = 321, Q_bike_op = 142, Q_ped_sm = 88, Q_ped_op = 191, U_bike = 12.98, U_ped = 5.1, sd = 1.58)
#'     * It follows <Formula 15-5> in KHCM(2013), p.645.
#' @param Q_bike_sm Same direction Bicycle traffic flow rate(vph)
#' @param U_bike Average bike speed (kph)
#' @param sd Standard deviation of bicycle speed
#' @keywords basic section of bicycle-pedestrian road bicycle path conflict number overtaking
#' @seealso \code{\link{LOS_type2_bk}}, \code{\link{F_meet_type2_bk}}, \code{\link{F_total_type2_b_bk}}
#' @export F_pass_type2_bb_bk Overtake count in bicycle lanes or basic section of the road bicycle path(times/h)
#' @examples
#' F_pass_type2_bb_bk(Q_bike_sm = 382)
#' F_pass_type2_bb_bk(Q_bike_sm = 543, U_bike = 12.1, sd = 3.3)
F_pass_type2_bb_bk <- function(Q_bike_sm = NULL, U_bike = NULL, sd = NULL){
if (Q_bike_sm >= 0){
if (is.null(U_bike) == TRUE & is.null(sd) == TRUE){
f <- 0.25 * Q_bike_sm
}
else if (U_bike >= 0 & sd >= 0){
f <- 2 * Q_bike_sm * sd / (U_bike * (pi)**(1/2))
}
else {f <- 'Error : [U_bike], [sd] must be all positive or null. Please check that.'}
}
else {f <- 'Error : [Q_bike_sm] must be positive(vph). Please check that.'}
f
}
F_total_type2_b_bk(Q_bike_sm = 321, Q_bike_op = 142, Q_ped_sm = 88, Q_ped_op = 191, U_bike = 12.98, U_ped = 5.1, sd = 1.58)
#'
#' The number of encounters per unit time(times/h) by the amount of bicycle traffic in bicycle-pedestrian road(type2).
#'     * The number of times a bicycle overtakes a bicycle traveling in the same direction on a bicycle-pedestrian road.
#'     * It follows <Formula 15-8> in KHCM(2013), p.646.
#' @param Q_bike_op Bicycle traffic flow rate in opposite direction(vph).
#' @keywords bicycle encounter number conflict bicycle-pedestrian road
#' @seealso \code{\link{F_meet_type2_pb_bk}}, \code{\link{F_meet_type2_bp_bk}}, \code{\link{F_total_type2_b_bk}}, \code{\link{LOS_type2_bk}}
#' @export F_meet_type2_bb_bk The number of encounters per unit time(times/h) by the amount of bicycle traffic in bicycle-pedestrian road(type2)
#' @examples
#' F_meet_type2_bb_bk(Q_bike_op = 293)
F_meet_type2_bb_bk <- function(Q_bike_op = NULL){
if (Q_bike_op >= 0){f <- 2 * Q_bike_op}
else {f <- 'Error : [Q_bike_op] must be positive(vph). Please check that.'}
f
}
F_total_type2_b_bk(Q_bike_sm = 321, Q_bike_op = 142, Q_ped_sm = 88, Q_ped_op = 191, U_bike = 12.98, U_ped = 5.1, sd = 1.58)
#'
#' Number of encounters between bicycle and pedestrian(walking in opposite direction) in cyclists view.
#'     * It follows <Formula 15-9> in KHCM(2013), p.646.
#' @param Q_ped_op Pedestrian traffic flow rate (person/h) walking in the opposite direction to the bicycle
#' @param U_bike Average bike speed (kph)
#' @param U_ped Average walking speed of pedestrian(kph)
#' @keywords bicycle-pedestrian road number of encounters opposite conflict
#' @export F_meet_type2_bp_bk Number of encounters with pedestrians walking in the opposite direction to the direction of bicycle travel (times/h)
#' @examples
#' F_meet_type2_bp_bk(Q_ped_op = 122, U_bike = 11.93, U_ped = 4.32)
F_meet_type2_bp_bk <- function(Q_ped_op = NULL, U_bike = NULL, U_ped = NULL){
if (Q_ped_op >= 0){
if (U_bike > 0 & U_ped > 0){f <- Q_ped_op * (U_bike / U_ped + 1)}
else {f <- 'Error : [U_bike], [U_ped] must be positive(kph). Please check that.'}
}
else {f <- 'Error : [Q_ped_op] must be positive(person/h). Please check that.'}
f
}
F_total_type2_b_bk(Q_bike_sm = 321, Q_bike_op = 142, Q_ped_sm = 88, Q_ped_op = 191, U_bike = 12.98, U_ped = 5.1, sd = 1.58)
#' @param Q_bike_op Bicycle traffic flow rate in opposite direction (vph)
#' @param Q_ped_sm Same direction pedestrian traffic flow rate (vph)
#' @param Q_ped_op Pedestrian traffic flow rate (person/h) walking in the opposite direction to the bicycle
#' @param U_bike Average bike speed (kph)
#' @param U_ped Average walking speed (kph)
#' @param sd Standard deviation of bicycle speed.
#' @keywords bicycle-pedestrian road total number of conflicts cyclist
#' @seealso \code{\link{F_pass_type2_bb_bk}}, \code{\link{F_pass_type2_bp_bk}}, \code{\link{F_meet_type2_bb_bk}}, \code{\link{F_meet_type2_bp_bk}}
#' @export F_total_type2_b_bk Total number of conflicts on the bike-pedestrian road(type2) in cyclists view(times/h)
#' @examples
F_total_type2_b_bk <- function(Q_bike_sm = NULL, Q_bike_op = NULL, Q_ped_sm = NULL, Q_ped_op = NULL, U_bike = NULL, U_ped = NULL, sd = NULL){
if (Q_bike_sm >= 0 & Q_bike_op >= 0){
if (Q_ped_sm >= 0 & Q_ped_op >= 0){
if (is.null(U_bike) == TRUE & is.null(U_ped) == TRUE & is.null(sd) == TRUE){
f <- (Q_bike_sm + Q_bike_op) * (1 - 0.75 * (Q_bike_sm/(Q_bike_sm + Q_bike_op))) + 2 * (Q_ped_sm + Q_ped_op)
}
else {
if (U_bike > 0 & U_ped > 0 & sd > 0){
F_pass_bb <- F_pass_type2_bb_bk(Q_bike_sm = Q_bike_sm, U_bike = U_bike, sd = sd)
F_pass_bp <- F_pass_type2_bp_bk(Q_ped_sm = Q_ped_sm, U_bike = U_bike, U_ped = U_ped)
F_meet_bb <- F_meet_type2_bb_bk(Q_bike_op = Q_bike_op)
F_meet_bp <- F_meet_type2_bp_bk(Q_ped_sm = Q_ped_sm, U_bike = U_bike, U_ped = U_ped)
f <- F_pass_bb + F_pass_bp + 0.5 * (F_meet_bb + F_meet_bp)
}
else {f <- 'Error : [U_bike], [U_ped], [sd] must be positive. Please check that.'}
}
}
else {f <- 'Error : [Q_ped_sm], [Q_ped_op] must be positive(person/h). Please check that.'}
}
else {f <- 'Error : [Q_bike_sm], [Q_bike_op] must be positive(vph). Please check that.'}
f
}
F_total_type2_b_bk(Q_bike_sm = 321, Q_bike_op = 142, Q_ped_sm = 88, Q_ped_op = 191, U_bike = 12.98, U_ped = 5.1, sd = 1.58)
View(F_meet_type2_bp_bk)
#' @param Q_bike_op Bicycle traffic flow rate in opposite direction (vph)
#' @param Q_ped_sm Same direction pedestrian traffic flow rate (vph)
#' @param Q_ped_op Pedestrian traffic flow rate (person/h) walking in the opposite direction to the bicycle
#' @param U_bike Average bike speed (kph)
#' @param U_ped Average walking speed (kph)
#' @param sd Standard deviation of bicycle speed.
#' @keywords bicycle-pedestrian road total number of conflicts cyclist
#' @seealso \code{\link{F_pass_type2_bb_bk}}, \code{\link{F_pass_type2_bp_bk}}, \code{\link{F_meet_type2_bb_bk}}, \code{\link{F_meet_type2_bp_bk}}
#' @export F_total_type2_b_bk Total number of conflicts on the bike-pedestrian road(type2) in cyclists view(times/h)
#' @examples
F_total_type2_b_bk <- function(Q_bike_sm = NULL, Q_bike_op = NULL, Q_ped_sm = NULL, Q_ped_op = NULL, U_bike = NULL, U_ped = NULL, sd = NULL){
if (Q_bike_sm >= 0 & Q_bike_op >= 0){
if (Q_ped_sm >= 0 & Q_ped_op >= 0){
if (is.null(U_bike) == TRUE & is.null(U_ped) == TRUE & is.null(sd) == TRUE){
f <- (Q_bike_sm + Q_bike_op) * (1 - 0.75 * (Q_bike_sm/(Q_bike_sm + Q_bike_op))) + 2 * (Q_ped_sm + Q_ped_op)
}
else {
if (U_bike > 0 & U_ped > 0 & sd > 0){
F_pass_bb <- F_pass_type2_bb_bk(Q_bike_sm = Q_bike_sm, U_bike = U_bike, sd = sd)
F_pass_bp <- F_pass_type2_bp_bk(Q_ped_sm = Q_ped_sm, U_bike = U_bike, U_ped = U_ped)
F_meet_bb <- F_meet_type2_bb_bk(Q_bike_op = Q_bike_op)
F_meet_bp <- F_meet_type2_bp_bk(Q_ped_op = Q_ped_op, U_bike = U_bike, U_ped = U_ped)
f <- F_pass_bb + F_pass_bp + 0.5 * (F_meet_bb + F_meet_bp)
}
else {f <- 'Error : [U_bike], [U_ped], [sd] must be positive. Please check that.'}
}
}
else {f <- 'Error : [Q_ped_sm], [Q_ped_op] must be positive(person/h). Please check that.'}
}
else {f <- 'Error : [Q_bike_sm], [Q_bike_op] must be positive(vph). Please check that.'}
f
}
F_total_type2_b_bk(Q_bike_sm = 321, Q_bike_op = 142, Q_ped_sm = 88, Q_ped_op = 191, U_bike = 12.98, U_ped = 5.1, sd = 1.58)
F_total_type2_b_bk(Q_bike_sm = 321, Q_bike_op = 142, Q_ped_sm = 88, Q_ped_op = 191)
#' Total number of conflicts on the bike-pedestrian road(type2) in pedestrians view.
#'     It follows <Formula 15-11>, <Formula 15-25> in KHCM(2013), p.646, p.651.
#' @param Q_bike_sm Same direction Bicycle traffic flow rate (vph)
#' @param Q_bike_op Bicycle traffic flow rate in opposite direction (vph)
#' @param U_bike Average bike speed (kph)
#' @param U_ped Average walking speed (kph)
#' @keywords bicycle-pedestrian road total number of conflicts pedestrian
#' @seealso \code{\link{F_pass_type2_pb_bk}}, \code{\link{F_meet_type2_pb_bk}}
#' @export F_total_type2_p_bk Total number of conflicts on the bike-pedestrian road(type2) in pedestrians view(times/h)
#' @examples
F_total_type2_b_bk <- function(Q_bike_sm = NULL, Q_bike_op = NULL, U_bike = NULL, U_ped = NULL){
if (Q_bike_sm >= 0 & Q_bike_op >= 0){
if (is.null(U_bike) == TRUE & is.null(U_ped) == TRUE){
f <- (Q_bike_sm + Q_bike_op) * 2/3
}
else {
if (U_bike > 0 & U_ped > 0){
F_pass_pb <- F_pass_type2_pb_bk(Q_bike_sm = Q_bike_sm, U_bike = U_bike, U_ped = U_ped)
F_meet_pb <- F_meet_type2_pb_bk(Q_bike_op = Q_bike_op, U_bike = U_bike, U_ped = U_ped)
f <- F_pass_pb + 0.5 * (F_meet_pb)
}
else {f <- 'Error : [U_bike], [U_ped] must be positive. Please check that.'}
}
}
else {f <- 'Error : [Q_bike_sm], [Q_bike_op] must be positive(vph). Please check that.'}
f
}
#' Total number of conflicts on the bike-pedestrian road(type2) in pedestrians view.
#'     It follows <Formula 15-11>, <Formula 15-25> in KHCM(2013), p.646, p.651.
#' @param Q_bike_sm Same direction Bicycle traffic flow rate (vph)
#' @param Q_bike_op Bicycle traffic flow rate in opposite direction (vph)
#' @param U_bike Average bike speed (kph)
#' @param U_ped Average walking speed (kph)
#' @keywords bicycle-pedestrian road total number of conflicts pedestrian
#' @seealso \code{\link{F_pass_type2_pb_bk}}, \code{\link{F_meet_type2_pb_bk}}
#' @export F_total_type2_p_bk Total number of conflicts on the bike-pedestrian road(type2) in pedestrians view(times/h)
#' @examples
F_total_type2_p_bk <- function(Q_bike_sm = NULL, Q_bike_op = NULL, U_bike = NULL, U_ped = NULL){
if (Q_bike_sm >= 0 & Q_bike_op >= 0){
if (is.null(U_bike) == TRUE & is.null(U_ped) == TRUE){
f <- (Q_bike_sm + Q_bike_op) * 2/3
}
else {
if (U_bike > 0 & U_ped > 0){
F_pass_pb <- F_pass_type2_pb_bk(Q_bike_sm = Q_bike_sm, U_bike = U_bike, U_ped = U_ped)
F_meet_pb <- F_meet_type2_pb_bk(Q_bike_op = Q_bike_op, U_bike = U_bike, U_ped = U_ped)
f <- F_pass_pb + 0.5 * (F_meet_pb)
}
else {f <- 'Error : [U_bike], [U_ped] must be positive. Please check that.'}
}
}
else {f <- 'Error : [Q_bike_sm], [Q_bike_op] must be positive(vph). Please check that.'}
f
}
F_total_type2_p_bk(Q_bike_sm = 239, Q_bike_op = 382)
F_total_type2_p_bk(Q_bike_sm = 239, Q_bike_op = 382, U_bike = 12.33, U_ped = 5.03)
